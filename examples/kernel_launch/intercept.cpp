/// This file is auto-generated by command "python3 ../../scripts/gen.py -s /usr/local/cuda/include/cuda.h --platform cuda --lib /usr/lib/x86_64-linux-gnu/libcuda.so --prefix cu -I /usr/lib/gcc/x86_64-linux-gnu/11/include"
#include "driver.h"

using namespace cuda_intercept::cuda;

// MODIFICATION 1: define your own function
CUresult myLaunchKernel(CUfunction f, unsigned int gridDimX, unsigned int gridDimY, unsigned int gridDimZ, unsigned int blockDimX, unsigned int blockDimY, unsigned int blockDimZ, unsigned int sharedMemBytes, CUstream hStream, void **kernelParams, void **extra) {
    // Your code here
    XINFO("Launch kernel: %p, grid (%u, %u, %u), block (%u, %u, %u), sharedMemBytes %u, stream %p", f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream);
    // call the original function
    return Driver::LaunchKernel(f, gridDimX, gridDimY, gridDimZ, blockDimX, blockDimY, blockDimZ, sharedMemBytes, hStream, kernelParams, extra);
}

EXPORT_C_FUNC CUresult GetProcAddress_v2(const char *symbol, void **pfn, int cudaVersion, cuuint64_t flags, CUdriverProcAddressQueryResult *symbolStatus);

DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetErrorString, CUresult, cuGetErrorString, CUresult, error, const char **, pStr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetErrorName, CUresult, cuGetErrorName, CUresult, error, const char **, pStr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Init, CUresult, cuInit, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DriverGetVersion, CUresult, cuDriverGetVersion, int *, driverVersion);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGet, CUresult, cuDeviceGet, CUdevice *, device, int, ordinal);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetCount, CUresult, cuDeviceGetCount, int *, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetName, CUresult, cuDeviceGetName, char *, name, int, len, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetUuid, CUresult, cuDeviceGetUuid, CUuuid *, uuid, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetUuid_v2, CUresult, cuDeviceGetUuid_v2, CUuuid *, uuid, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetLuid, CUresult, cuDeviceGetLuid, char *, luid, unsigned int *, deviceNodeMask, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceTotalMem_v2, CUresult, cuDeviceTotalMem_v2, size_t *, bytes, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetTexture1DLinearMaxWidth, CUresult, cuDeviceGetTexture1DLinearMaxWidth, size_t *, maxWidthInElements, CUarray_format, format, unsigned int, numChannels, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetAttribute, CUresult, cuDeviceGetAttribute, int *, pi, CUdevice_attribute, attrib, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetNvSciSyncAttributes, CUresult, cuDeviceGetNvSciSyncAttributes, void *, nvSciSyncAttrList, CUdevice, dev, int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetMemPool, CUresult, cuDeviceSetMemPool, CUdevice, dev, CUmemoryPool, pool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetMemPool, CUresult, cuDeviceGetMemPool, CUmemoryPool *, pool, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetDefaultMemPool, CUresult, cuDeviceGetDefaultMemPool, CUmemoryPool *, pool_out, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetExecAffinitySupport, CUresult, cuDeviceGetExecAffinitySupport, int *, pi, CUexecAffinityType, type, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FlushGPUDirectRDMAWrites, CUresult, cuFlushGPUDirectRDMAWrites, CUflushGPUDirectRDMAWritesTarget, target, CUflushGPUDirectRDMAWritesScope, scope);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetProperties, CUresult, cuDeviceGetProperties, CUdevprop *, prop, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceComputeCapability, CUresult, cuDeviceComputeCapability, int *, major, int *, minor, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRetain, CUresult, cuDevicePrimaryCtxRetain, CUcontext *, pctx, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxRelease_v2, CUresult, cuDevicePrimaryCtxRelease_v2, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxSetFlags_v2, CUresult, cuDevicePrimaryCtxSetFlags_v2, CUdevice, dev, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxGetState, CUresult, cuDevicePrimaryCtxGetState, CUdevice, dev, unsigned int *, flags, int *, active);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DevicePrimaryCtxReset_v2, CUresult, cuDevicePrimaryCtxReset_v2, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate_v2, CUresult, cuCtxCreate_v2, CUcontext *, pctx, unsigned int, flags, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxCreate_v3, CUresult, cuCtxCreate_v3, CUcontext *, pctx, CUexecAffinityParam *, paramsArray, int, numParams, unsigned int, flags, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDestroy_v2, CUresult, cuCtxDestroy_v2, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPushCurrent_v2, CUresult, cuCtxPushCurrent_v2, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxPopCurrent_v2, CUresult, cuCtxPopCurrent_v2, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetCurrent, CUresult, cuCtxSetCurrent, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetCurrent, CUresult, cuCtxGetCurrent, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetDevice, CUresult, cuCtxGetDevice, CUdevice *, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetFlags, CUresult, cuCtxGetFlags, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetFlags, CUresult, cuCtxSetFlags, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetId, CUresult, cuCtxGetId, CUcontext, ctx, unsigned long long *, ctxId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSynchronize, CUresult, cuCtxSynchronize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetLimit, CUresult, cuCtxSetLimit, CUlimit, limit, size_t, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetLimit, CUresult, cuCtxGetLimit, size_t *, pvalue, CUlimit, limit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetCacheConfig, CUresult, cuCtxGetCacheConfig, CUfunc_cache *, pconfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetCacheConfig, CUresult, cuCtxSetCacheConfig, CUfunc_cache, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetSharedMemConfig, CUresult, cuCtxGetSharedMemConfig, CUsharedconfig *, pConfig);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxSetSharedMemConfig, CUresult, cuCtxSetSharedMemConfig, CUsharedconfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetApiVersion, CUresult, cuCtxGetApiVersion, CUcontext, ctx, unsigned int *, version);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetStreamPriorityRange, CUresult, cuCtxGetStreamPriorityRange, int *, leastPriority, int *, greatestPriority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxResetPersistingL2Cache, CUresult, cuCtxResetPersistingL2Cache);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxGetExecAffinity, CUresult, cuCtxGetExecAffinity, CUexecAffinityParam *, pExecAffinity, CUexecAffinityType, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxAttach, CUresult, cuCtxAttach, CUcontext *, pctx, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDetach, CUresult, cuCtxDetach, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoad, CUresult, cuModuleLoad, CUmodule *, module, const char *, fname);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadData, CUresult, cuModuleLoadData, CUmodule *, module, const void *, image);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadDataEx, CUresult, cuModuleLoadDataEx, CUmodule *, module, const void *, image, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleLoadFatBinary, CUresult, cuModuleLoadFatBinary, CUmodule *, module, const void *, fatCubin);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleUnload, CUresult, cuModuleUnload, CUmodule, hmod);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetLoadingMode, CUresult, cuModuleGetLoadingMode, CUmoduleLoadingMode *, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetFunction, CUresult, cuModuleGetFunction, CUfunction *, hfunc, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetGlobal_v2, CUresult, cuModuleGetGlobal_v2, CUdeviceptr *, dptr, size_t *, bytes, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkCreate_v2, CUresult, cuLinkCreate_v2, unsigned int, numOptions, CUjit_option *, options, void **, optionValues, CUlinkState *, stateOut);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkAddData_v2, CUresult, cuLinkAddData_v2, CUlinkState, state, CUjitInputType, type, void *, data, size_t, size, const char *, name, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkAddFile_v2, CUresult, cuLinkAddFile_v2, CUlinkState, state, CUjitInputType, type, const char *, path, unsigned int, numOptions, CUjit_option *, options, void **, optionValues);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkComplete, CUresult, cuLinkComplete, CUlinkState, state, void **, cubinOut, size_t *, sizeOut);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LinkDestroy, CUresult, cuLinkDestroy, CUlinkState, state);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetTexRef, CUresult, cuModuleGetTexRef, CUtexref *, pTexRef, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ModuleGetSurfRef, CUresult, cuModuleGetSurfRef, CUsurfref *, pSurfRef, CUmodule, hmod, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryLoadData, CUresult, cuLibraryLoadData, CUlibrary *, library, const void *, code, CUjit_option *, jitOptions, void **, jitOptionsValues, unsigned int, numJitOptions, CUlibraryOption *, libraryOptions, void **, libraryOptionValues, unsigned int, numLibraryOptions);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryLoadFromFile, CUresult, cuLibraryLoadFromFile, CUlibrary *, library, const char *, fileName, CUjit_option *, jitOptions, void **, jitOptionsValues, unsigned int, numJitOptions, CUlibraryOption *, libraryOptions, void **, libraryOptionValues, unsigned int, numLibraryOptions);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryUnload, CUresult, cuLibraryUnload, CUlibrary, library);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetKernel, CUresult, cuLibraryGetKernel, CUkernel *, pKernel, CUlibrary, library, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetModule, CUresult, cuLibraryGetModule, CUmodule *, pMod, CUlibrary, library);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetFunction, CUresult, cuKernelGetFunction, CUfunction *, pFunc, CUkernel, kernel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetGlobal, CUresult, cuLibraryGetGlobal, CUdeviceptr *, dptr, size_t *, bytes, CUlibrary, library, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetManaged, CUresult, cuLibraryGetManaged, CUdeviceptr *, dptr, size_t *, bytes, CUlibrary, library, const char *, name);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LibraryGetUnifiedFunction, CUresult, cuLibraryGetUnifiedFunction, void **, fptr, CUlibrary, library, const char *, symbol);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelGetAttribute, CUresult, cuKernelGetAttribute, int *, pi, CUfunction_attribute, attrib, CUkernel, kernel, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetAttribute, CUresult, cuKernelSetAttribute, CUfunction_attribute, attrib, int, val, CUkernel, kernel, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::KernelSetCacheConfig, CUresult, cuKernelSetCacheConfig, CUkernel, kernel, CUfunc_cache, config, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetInfo_v2, CUresult, cuMemGetInfo_v2, size_t *, free, size_t *, total);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAlloc_v2, CUresult, cuMemAlloc_v2, CUdeviceptr *, dptr, size_t, bytesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocPitch_v2, CUresult, cuMemAllocPitch_v2, CUdeviceptr *, dptr, size_t *, pPitch, size_t, WidthInBytes, size_t, Height, unsigned int, ElementSizeBytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFree_v2, CUresult, cuMemFree_v2, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAddressRange_v2, CUresult, cuMemGetAddressRange_v2, CUdeviceptr *, pbase, size_t *, psize, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocHost_v2, CUresult, cuMemAllocHost_v2, void **, pp, size_t, bytesize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFreeHost, CUresult, cuMemFreeHost, void *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostAlloc, CUresult, cuMemHostAlloc, void **, pp, size_t, bytesize, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostGetDevicePointer_v2, CUresult, cuMemHostGetDevicePointer_v2, CUdeviceptr *, pdptr, void *, p, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostGetFlags, CUresult, cuMemHostGetFlags, unsigned int *, pFlags, void *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocManaged, CUresult, cuMemAllocManaged, CUdeviceptr *, dptr, size_t, bytesize, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetByPCIBusId, CUresult, cuDeviceGetByPCIBusId, CUdevice *, dev, const char *, pciBusId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetPCIBusId, CUresult, cuDeviceGetPCIBusId, char *, pciBusId, int, len, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcGetEventHandle, CUresult, cuIpcGetEventHandle, CUipcEventHandle *, pHandle, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenEventHandle, CUresult, cuIpcOpenEventHandle, CUevent *, phEvent, CUipcEventHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcGetMemHandle, CUresult, cuIpcGetMemHandle, CUipcMemHandle *, pHandle, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcOpenMemHandle_v2, CUresult, cuIpcOpenMemHandle_v2, CUdeviceptr *, pdptr, CUipcMemHandle, handle, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::IpcCloseMemHandle, CUresult, cuIpcCloseMemHandle, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostRegister_v2, CUresult, cuMemHostRegister_v2, void *, p, size_t, bytesize, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemHostUnregister, CUresult, cuMemHostUnregister, void *, p);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy, CUresult, cuMemcpy, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeer, CUresult, cuMemcpyPeer, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoD_v2, CUresult, cuMemcpyHtoD_v2, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoH_v2, CUresult, cuMemcpyDtoH_v2, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoD_v2, CUresult, cuMemcpyDtoD_v2, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoA_v2, CUresult, cuMemcpyDtoA_v2, CUarray, dstArray, size_t, dstOffset, CUdeviceptr, srcDevice, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoD_v2, CUresult, cuMemcpyAtoD_v2, CUdeviceptr, dstDevice, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoA_v2, CUresult, cuMemcpyHtoA_v2, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoH_v2, CUresult, cuMemcpyAtoH_v2, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoA_v2, CUresult, cuMemcpyAtoA_v2, CUarray, dstArray, size_t, dstOffset, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2D_v2, CUresult, cuMemcpy2D_v2, const CUDA_MEMCPY2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DUnaligned_v2, CUresult, cuMemcpy2DUnaligned_v2, const CUDA_MEMCPY2D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3D_v2, CUresult, cuMemcpy3D_v2, const CUDA_MEMCPY3D *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DPeer, CUresult, cuMemcpy3DPeer, const CUDA_MEMCPY3D_PEER *, pCopy);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAsync, CUresult, cuMemcpyAsync, CUdeviceptr, dst, CUdeviceptr, src, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyPeerAsync, CUresult, cuMemcpyPeerAsync, CUdeviceptr, dstDevice, CUcontext, dstContext, CUdeviceptr, srcDevice, CUcontext, srcContext, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoDAsync_v2, CUresult, cuMemcpyHtoDAsync_v2, CUdeviceptr, dstDevice, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoHAsync_v2, CUresult, cuMemcpyDtoHAsync_v2, void *, dstHost, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyDtoDAsync_v2, CUresult, cuMemcpyDtoDAsync_v2, CUdeviceptr, dstDevice, CUdeviceptr, srcDevice, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyHtoAAsync_v2, CUresult, cuMemcpyHtoAAsync_v2, CUarray, dstArray, size_t, dstOffset, const void *, srcHost, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemcpyAtoHAsync_v2, CUresult, cuMemcpyAtoHAsync_v2, void *, dstHost, CUarray, srcArray, size_t, srcOffset, size_t, ByteCount, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy2DAsync_v2, CUresult, cuMemcpy2DAsync_v2, const CUDA_MEMCPY2D *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DAsync_v2, CUresult, cuMemcpy3DAsync_v2, const CUDA_MEMCPY3D *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Memcpy3DPeerAsync, CUresult, cuMemcpy3DPeerAsync, const CUDA_MEMCPY3D_PEER *, pCopy, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8_v2, CUresult, cuMemsetD8_v2, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16_v2, CUresult, cuMemsetD16_v2, CUdeviceptr, dstDevice, unsigned short, us, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32_v2, CUresult, cuMemsetD32_v2, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D8_v2, CUresult, cuMemsetD2D8_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D16_v2, CUresult, cuMemsetD2D16_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D32_v2, CUresult, cuMemsetD2D32_v2, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD8Async, CUresult, cuMemsetD8Async, CUdeviceptr, dstDevice, unsigned char, uc, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD16Async, CUresult, cuMemsetD16Async, CUdeviceptr, dstDevice, unsigned short, us, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD32Async, CUresult, cuMemsetD32Async, CUdeviceptr, dstDevice, unsigned int, ui, size_t, N, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D8Async, CUresult, cuMemsetD2D8Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned char, uc, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D16Async, CUresult, cuMemsetD2D16Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned short, us, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemsetD2D32Async, CUresult, cuMemsetD2D32Async, CUdeviceptr, dstDevice, size_t, dstPitch, unsigned int, ui, size_t, Width, size_t, Height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayCreate_v2, CUresult, cuArrayCreate_v2, CUarray *, pHandle, const CUDA_ARRAY_DESCRIPTOR *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetDescriptor_v2, CUresult, cuArrayGetDescriptor_v2, CUDA_ARRAY_DESCRIPTOR *, pArrayDescriptor, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetSparseProperties, CUresult, cuArrayGetSparseProperties, CUDA_ARRAY_SPARSE_PROPERTIES *, sparseProperties, CUarray, array);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetSparseProperties, CUresult, cuMipmappedArrayGetSparseProperties, CUDA_ARRAY_SPARSE_PROPERTIES *, sparseProperties, CUmipmappedArray, mipmap);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetMemoryRequirements, CUresult, cuArrayGetMemoryRequirements, CUDA_ARRAY_MEMORY_REQUIREMENTS *, memoryRequirements, CUarray, array, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetMemoryRequirements, CUresult, cuMipmappedArrayGetMemoryRequirements, CUDA_ARRAY_MEMORY_REQUIREMENTS *, memoryRequirements, CUmipmappedArray, mipmap, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayGetPlane, CUresult, cuArrayGetPlane, CUarray *, pPlaneArray, CUarray, hArray, unsigned int, planeIdx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ArrayDestroy, CUresult, cuArrayDestroy, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DCreate_v2, CUresult, cuArray3DCreate_v2, CUarray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR *, pAllocateArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Array3DGetDescriptor_v2, CUresult, cuArray3DGetDescriptor_v2, CUDA_ARRAY3D_DESCRIPTOR *, pArrayDescriptor, CUarray, hArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayCreate, CUresult, cuMipmappedArrayCreate, CUmipmappedArray *, pHandle, const CUDA_ARRAY3D_DESCRIPTOR *, pMipmappedArrayDesc, unsigned int, numMipmapLevels);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayGetLevel, CUresult, cuMipmappedArrayGetLevel, CUarray *, pLevelArray, CUmipmappedArray, hMipmappedArray, unsigned int, level);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MipmappedArrayDestroy, CUresult, cuMipmappedArrayDestroy, CUmipmappedArray, hMipmappedArray);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetHandleForAddressRange, CUresult, cuMemGetHandleForAddressRange, void *, handle, CUdeviceptr, dptr, size_t, size, CUmemRangeHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAddressReserve, CUresult, cuMemAddressReserve, CUdeviceptr *, ptr, size_t, size, size_t, alignment, CUdeviceptr, addr, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAddressFree, CUresult, cuMemAddressFree, CUdeviceptr, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemCreate, CUresult, cuMemCreate, CUmemGenericAllocationHandle *, handle, size_t, size, const CUmemAllocationProp *, prop, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRelease, CUresult, cuMemRelease, CUmemGenericAllocationHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMap, CUresult, cuMemMap, CUdeviceptr, ptr, size_t, size, size_t, offset, CUmemGenericAllocationHandle, handle, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemMapArrayAsync, CUresult, cuMemMapArrayAsync, CUarrayMapInfo *, mapInfoList, unsigned int, count, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemUnmap, CUresult, cuMemUnmap, CUdeviceptr, ptr, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemSetAccess, CUresult, cuMemSetAccess, CUdeviceptr, ptr, size_t, size, const CUmemAccessDesc *, desc, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAccess, CUresult, cuMemGetAccess, unsigned long long *, flags, const CUmemLocation *, location, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemExportToShareableHandle, CUresult, cuMemExportToShareableHandle, void *, shareableHandle, CUmemGenericAllocationHandle, handle, CUmemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemImportFromShareableHandle, CUresult, cuMemImportFromShareableHandle, CUmemGenericAllocationHandle *, handle, void *, osHandle, CUmemAllocationHandleType, shHandleType);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocationGranularity, CUresult, cuMemGetAllocationGranularity, size_t *, granularity, const CUmemAllocationProp *, prop, CUmemAllocationGranularity_flags, option);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemGetAllocationPropertiesFromHandle, CUresult, cuMemGetAllocationPropertiesFromHandle, CUmemAllocationProp *, prop, CUmemGenericAllocationHandle, handle);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRetainAllocationHandle, CUresult, cuMemRetainAllocationHandle, CUmemGenericAllocationHandle *, handle, void *, addr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemFreeAsync, CUresult, cuMemFreeAsync, CUdeviceptr, dptr, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocAsync, CUresult, cuMemAllocAsync, CUdeviceptr *, dptr, size_t, bytesize, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolTrimTo, CUresult, cuMemPoolTrimTo, CUmemoryPool, pool, size_t, minBytesToKeep);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolSetAttribute, CUresult, cuMemPoolSetAttribute, CUmemoryPool, pool, CUmemPool_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolGetAttribute, CUresult, cuMemPoolGetAttribute, CUmemoryPool, pool, CUmemPool_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolSetAccess, CUresult, cuMemPoolSetAccess, CUmemoryPool, pool, const CUmemAccessDesc *, map, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolGetAccess, CUresult, cuMemPoolGetAccess, CUmemAccess_flags *, flags, CUmemoryPool, memPool, CUmemLocation *, location);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolCreate, CUresult, cuMemPoolCreate, CUmemoryPool *, pool, const CUmemPoolProps *, poolProps);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolDestroy, CUresult, cuMemPoolDestroy, CUmemoryPool, pool);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAllocFromPoolAsync, CUresult, cuMemAllocFromPoolAsync, CUdeviceptr *, dptr, size_t, bytesize, CUmemoryPool, pool, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolExportToShareableHandle, CUresult, cuMemPoolExportToShareableHandle, void *, handle_out, CUmemoryPool, pool, CUmemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolImportFromShareableHandle, CUresult, cuMemPoolImportFromShareableHandle, CUmemoryPool *, pool_out, void *, handle, CUmemAllocationHandleType, handleType, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolExportPointer, CUresult, cuMemPoolExportPointer, CUmemPoolPtrExportData *, shareData_out, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPoolImportPointer, CUresult, cuMemPoolImportPointer, CUdeviceptr *, ptr_out, CUmemoryPool, pool, CUmemPoolPtrExportData *, shareData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastCreate, CUresult, cuMulticastCreate, CUmemGenericAllocationHandle *, mcHandle, const CUmulticastObjectProp *, prop);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastAddDevice, CUresult, cuMulticastAddDevice, CUmemGenericAllocationHandle, mcHandle, CUdevice, dev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastBindMem, CUresult, cuMulticastBindMem, CUmemGenericAllocationHandle, mcHandle, size_t, mcOffset, CUmemGenericAllocationHandle, memHandle, size_t, memOffset, size_t, size, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastBindAddr, CUresult, cuMulticastBindAddr, CUmemGenericAllocationHandle, mcHandle, size_t, mcOffset, CUdeviceptr, memptr, size_t, size, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastUnbind, CUresult, cuMulticastUnbind, CUmemGenericAllocationHandle, mcHandle, CUdevice, dev, size_t, mcOffset, size_t, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MulticastGetGranularity, CUresult, cuMulticastGetGranularity, size_t *, granularity, const CUmulticastObjectProp *, prop, CUmulticastGranularity_flags, option);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerGetAttribute, CUresult, cuPointerGetAttribute, void *, data, CUpointer_attribute, attribute, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemPrefetchAsync, CUresult, cuMemPrefetchAsync, CUdeviceptr, devPtr, size_t, count, CUdevice, dstDevice, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemAdvise, CUresult, cuMemAdvise, CUdeviceptr, devPtr, size_t, count, CUmem_advise, advice, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRangeGetAttribute, CUresult, cuMemRangeGetAttribute, void *, data, size_t, dataSize, CUmem_range_attribute, attribute, CUdeviceptr, devPtr, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::MemRangeGetAttributes, CUresult, cuMemRangeGetAttributes, void **, data, size_t *, dataSizes, CUmem_range_attribute *, attributes, size_t, numAttributes, CUdeviceptr, devPtr, size_t, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerSetAttribute, CUresult, cuPointerSetAttribute, const void *, value, CUpointer_attribute, attribute, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::PointerGetAttributes, CUresult, cuPointerGetAttributes, unsigned int, numAttributes, CUpointer_attribute *, attributes, void **, data, CUdeviceptr, ptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamCreate, CUresult, cuStreamCreate, CUstream *, phStream, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamCreateWithPriority, CUresult, cuStreamCreateWithPriority, CUstream *, phStream, unsigned int, flags, int, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetPriority, CUresult, cuStreamGetPriority, CUstream, hStream, int *, priority);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetFlags, CUresult, cuStreamGetFlags, CUstream, hStream, unsigned int *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetId, CUresult, cuStreamGetId, CUstream, hStream, unsigned long long *, streamId);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCtx, CUresult, cuStreamGetCtx, CUstream, hStream, CUcontext *, pctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitEvent, CUresult, cuStreamWaitEvent, CUstream, hStream, CUevent, hEvent, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAddCallback, CUresult, cuStreamAddCallback, CUstream, hStream, CUstreamCallback, callback, void *, userData, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBeginCapture_v2, CUresult, cuStreamBeginCapture_v2, CUstream, hStream, CUstreamCaptureMode, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ThreadExchangeStreamCaptureMode, CUresult, cuThreadExchangeStreamCaptureMode, CUstreamCaptureMode *, mode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamEndCapture, CUresult, cuStreamEndCapture, CUstream, hStream, CUgraph *, phGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamIsCapturing, CUresult, cuStreamIsCapturing, CUstream, hStream, CUstreamCaptureStatus *, captureStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetCaptureInfo_v2, CUresult, cuStreamGetCaptureInfo_v2, CUstream, hStream, CUstreamCaptureStatus *, captureStatus_out, cuuint64_t *, id_out, CUgraph *, graph_out, const CUgraphNode **, dependencies_out, size_t *, numDependencies_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamUpdateCaptureDependencies, CUresult, cuStreamUpdateCaptureDependencies, CUstream, hStream, CUgraphNode *, dependencies, size_t, numDependencies, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamAttachMemAsync, CUresult, cuStreamAttachMemAsync, CUstream, hStream, CUdeviceptr, dptr, size_t, length, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamQuery, CUresult, cuStreamQuery, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamSynchronize, CUresult, cuStreamSynchronize, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamDestroy_v2, CUresult, cuStreamDestroy_v2, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamCopyAttributes, CUresult, cuStreamCopyAttributes, CUstream, dst, CUstream, src);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamGetAttribute, CUresult, cuStreamGetAttribute, CUstream, hStream, CUstreamAttrID, attr, CUstreamAttrValue *, value_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamSetAttribute, CUresult, cuStreamSetAttribute, CUstream, hStream, CUstreamAttrID, attr, const CUstreamAttrValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventCreate, CUresult, cuEventCreate, CUevent *, phEvent, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventRecord, CUresult, cuEventRecord, CUevent, hEvent, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventRecordWithFlags, CUresult, cuEventRecordWithFlags, CUevent, hEvent, CUstream, hStream, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventQuery, CUresult, cuEventQuery, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventSynchronize, CUresult, cuEventSynchronize, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventDestroy_v2, CUresult, cuEventDestroy_v2, CUevent, hEvent);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::EventElapsedTime, CUresult, cuEventElapsedTime, float *, pMilliseconds, CUevent, hStart, CUevent, hEnd);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImportExternalMemory, CUresult, cuImportExternalMemory, CUexternalMemory *, extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC *, memHandleDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExternalMemoryGetMappedBuffer, CUresult, cuExternalMemoryGetMappedBuffer, CUdeviceptr *, devPtr, CUexternalMemory, extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC *, bufferDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ExternalMemoryGetMappedMipmappedArray, CUresult, cuExternalMemoryGetMappedMipmappedArray, CUmipmappedArray *, mipmap, CUexternalMemory, extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC *, mipmapDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyExternalMemory, CUresult, cuDestroyExternalMemory, CUexternalMemory, extMem);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ImportExternalSemaphore, CUresult, cuImportExternalSemaphore, CUexternalSemaphore *, extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC *, semHandleDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SignalExternalSemaphoresAsync, CUresult, cuSignalExternalSemaphoresAsync, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::WaitExternalSemaphoresAsync, CUresult, cuWaitExternalSemaphoresAsync, const CUexternalSemaphore *, extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *, paramsArray, unsigned int, numExtSems, CUstream, stream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DestroyExternalSemaphore, CUresult, cuDestroyExternalSemaphore, CUexternalSemaphore, extSem);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue32_v2, CUresult, cuStreamWaitValue32_v2, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWaitValue64_v2, CUresult, cuStreamWaitValue64_v2, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue32_v2, CUresult, cuStreamWriteValue32_v2, CUstream, stream, CUdeviceptr, addr, cuuint32_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamWriteValue64_v2, CUresult, cuStreamWriteValue64_v2, CUstream, stream, CUdeviceptr, addr, cuuint64_t, value, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::StreamBatchMemOp_v2, CUresult, cuStreamBatchMemOp_v2, CUstream, stream, unsigned int, count, CUstreamBatchMemOpParams *, paramArray, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetAttribute, CUresult, cuFuncGetAttribute, int *, pi, CUfunction_attribute, attrib, CUfunction, hfunc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetAttribute, CUresult, cuFuncSetAttribute, CUfunction, hfunc, CUfunction_attribute, attrib, int, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetCacheConfig, CUresult, cuFuncSetCacheConfig, CUfunction, hfunc, CUfunc_cache, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetSharedMemConfig, CUresult, cuFuncSetSharedMemConfig, CUfunction, hfunc, CUsharedconfig, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncGetModule, CUresult, cuFuncGetModule, CUmodule *, hmod, CUfunction, hfunc);
// MODIFICATION 2: redirect cuLaunchKernel to myLaunchKernel
// DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchKernel, CUresult, cuLaunchKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(myLaunchKernel, CUresult, cuLaunchKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchKernelEx, CUresult, cuLaunchKernelEx, const CUlaunchConfig *, config, CUfunction, f, void **, kernelParams, void **, extra);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernel, CUresult, cuLaunchCooperativeKernel, CUfunction, f, unsigned int, gridDimX, unsigned int, gridDimY, unsigned int, gridDimZ, unsigned int, blockDimX, unsigned int, blockDimY, unsigned int, blockDimZ, unsigned int, sharedMemBytes, CUstream, hStream, void **, kernelParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchCooperativeKernelMultiDevice, CUresult, cuLaunchCooperativeKernelMultiDevice, CUDA_LAUNCH_PARAMS *, launchParamsList, unsigned int, numDevices, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchHostFunc, CUresult, cuLaunchHostFunc, CUstream, hStream, CUhostFn, fn, void *, userData);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetBlockShape, CUresult, cuFuncSetBlockShape, CUfunction, hfunc, int, x, int, y, int, z);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::FuncSetSharedSize, CUresult, cuFuncSetSharedSize, CUfunction, hfunc, unsigned int, bytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetSize, CUresult, cuParamSetSize, CUfunction, hfunc, unsigned int, numbytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSeti, CUresult, cuParamSeti, CUfunction, hfunc, int, offset, unsigned int, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetf, CUresult, cuParamSetf, CUfunction, hfunc, int, offset, float, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetv, CUresult, cuParamSetv, CUfunction, hfunc, int, offset, void *, ptr, unsigned int, numbytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::Launch, CUresult, cuLaunch, CUfunction, f);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchGrid, CUresult, cuLaunchGrid, CUfunction, f, int, grid_width, int, grid_height);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::LaunchGridAsync, CUresult, cuLaunchGridAsync, CUfunction, f, int, grid_width, int, grid_height, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::ParamSetTexRef, CUresult, cuParamSetTexRef, CUfunction, hfunc, int, texunit, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphCreate, CUresult, cuGraphCreate, CUgraph *, phGraph, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddKernelNode_v2, CUresult, cuGraphAddKernelNode_v2, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetParams_v2, CUresult, cuGraphKernelNodeGetParams_v2, CUgraphNode, hNode, CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetParams_v2, CUresult, cuGraphKernelNodeSetParams_v2, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemcpyNode, CUresult, cuGraphAddMemcpyNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_MEMCPY3D *, copyParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeGetParams, CUresult, cuGraphMemcpyNodeGetParams, CUgraphNode, hNode, CUDA_MEMCPY3D *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemcpyNodeSetParams, CUresult, cuGraphMemcpyNodeSetParams, CUgraphNode, hNode, const CUDA_MEMCPY3D *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemsetNode, CUresult, cuGraphAddMemsetNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_MEMSET_NODE_PARAMS *, memsetParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemsetNodeGetParams, CUresult, cuGraphMemsetNodeGetParams, CUgraphNode, hNode, CUDA_MEMSET_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemsetNodeSetParams, CUresult, cuGraphMemsetNodeSetParams, CUgraphNode, hNode, const CUDA_MEMSET_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddHostNode, CUresult, cuGraphAddHostNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphHostNodeGetParams, CUresult, cuGraphHostNodeGetParams, CUgraphNode, hNode, CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphHostNodeSetParams, CUresult, cuGraphHostNodeSetParams, CUgraphNode, hNode, const CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddChildGraphNode, CUresult, cuGraphAddChildGraphNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUgraph, childGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphChildGraphNodeGetGraph, CUresult, cuGraphChildGraphNodeGetGraph, CUgraphNode, hNode, CUgraph *, phGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEmptyNode, CUresult, cuGraphAddEmptyNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEventRecordNode, CUresult, cuGraphAddEventRecordNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventRecordNodeGetEvent, CUresult, cuGraphEventRecordNodeGetEvent, CUgraphNode, hNode, CUevent *, event_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventRecordNodeSetEvent, CUresult, cuGraphEventRecordNodeSetEvent, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddEventWaitNode, CUresult, cuGraphAddEventWaitNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventWaitNodeGetEvent, CUresult, cuGraphEventWaitNodeGetEvent, CUgraphNode, hNode, CUevent *, event_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphEventWaitNodeSetEvent, CUresult, cuGraphEventWaitNodeSetEvent, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddExternalSemaphoresSignalNode, CUresult, cuGraphAddExternalSemaphoresSignalNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresSignalNodeGetParams, CUresult, cuGraphExternalSemaphoresSignalNodeGetParams, CUgraphNode, hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, params_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresSignalNodeSetParams, CUresult, cuGraphExternalSemaphoresSignalNodeSetParams, CUgraphNode, hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddExternalSemaphoresWaitNode, CUresult, cuGraphAddExternalSemaphoresWaitNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresWaitNodeGetParams, CUresult, cuGraphExternalSemaphoresWaitNodeGetParams, CUgraphNode, hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS *, params_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExternalSemaphoresWaitNodeSetParams, CUresult, cuGraphExternalSemaphoresWaitNodeSetParams, CUgraphNode, hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddBatchMemOpNode, CUresult, cuGraphAddBatchMemOpNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphBatchMemOpNodeGetParams, CUresult, cuGraphBatchMemOpNodeGetParams, CUgraphNode, hNode, CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphBatchMemOpNodeSetParams, CUresult, cuGraphBatchMemOpNodeSetParams, CUgraphNode, hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecBatchMemOpNodeSetParams, CUresult, cuGraphExecBatchMemOpNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemAllocNode, CUresult, cuGraphAddMemAllocNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemAllocNodeGetParams, CUresult, cuGraphMemAllocNodeGetParams, CUgraphNode, hNode, CUDA_MEM_ALLOC_NODE_PARAMS *, params_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddMemFreeNode, CUresult, cuGraphAddMemFreeNode, CUgraphNode *, phGraphNode, CUgraph, hGraph, const CUgraphNode *, dependencies, size_t, numDependencies, CUdeviceptr, dptr);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphMemFreeNodeGetParams, CUresult, cuGraphMemFreeNodeGetParams, CUgraphNode, hNode, CUdeviceptr *, dptr_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGraphMemTrim, CUresult, cuDeviceGraphMemTrim, CUdevice, device);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetGraphMemAttribute, CUresult, cuDeviceGetGraphMemAttribute, CUdevice, device, CUgraphMem_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceSetGraphMemAttribute, CUresult, cuDeviceSetGraphMemAttribute, CUdevice, device, CUgraphMem_attribute, attr, void *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphClone, CUresult, cuGraphClone, CUgraph *, phGraphClone, CUgraph, originalGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeFindInClone, CUresult, cuGraphNodeFindInClone, CUgraphNode *, phNode, CUgraphNode, hOriginalNode, CUgraph, hClonedGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetType, CUresult, cuGraphNodeGetType, CUgraphNode, hNode, CUgraphNodeType *, type);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetNodes, CUresult, cuGraphGetNodes, CUgraph, hGraph, CUgraphNode *, nodes, size_t *, numNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetRootNodes, CUresult, cuGraphGetRootNodes, CUgraph, hGraph, CUgraphNode *, rootNodes, size_t *, numRootNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphGetEdges, CUresult, cuGraphGetEdges, CUgraph, hGraph, CUgraphNode *, from, CUgraphNode *, to, size_t *, numEdges);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependencies, CUresult, cuGraphNodeGetDependencies, CUgraphNode, hNode, CUgraphNode *, dependencies, size_t *, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetDependentNodes, CUresult, cuGraphNodeGetDependentNodes, CUgraphNode, hNode, CUgraphNode *, dependentNodes, size_t *, numDependentNodes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphAddDependencies, CUresult, cuGraphAddDependencies, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRemoveDependencies, CUresult, cuGraphRemoveDependencies, CUgraph, hGraph, const CUgraphNode *, from, const CUgraphNode *, to, size_t, numDependencies);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDestroyNode, CUresult, cuGraphDestroyNode, CUgraphNode, hNode);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithFlags, CUresult, cuGraphInstantiateWithFlags, CUgraphExec *, phGraphExec, CUgraph, hGraph, unsigned long long, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphInstantiateWithParams, CUresult, cuGraphInstantiateWithParams, CUgraphExec *, phGraphExec, CUgraph, hGraph, CUDA_GRAPH_INSTANTIATE_PARAMS *, instantiateParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecGetFlags, CUresult, cuGraphExecGetFlags, CUgraphExec, hGraphExec, cuuint64_t *, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecKernelNodeSetParams_v2, CUresult, cuGraphExecKernelNodeSetParams_v2, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_KERNEL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemcpyNodeSetParams, CUresult, cuGraphExecMemcpyNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_MEMCPY3D *, copyParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecMemsetNodeSetParams, CUresult, cuGraphExecMemsetNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_MEMSET_NODE_PARAMS *, memsetParams, CUcontext, ctx);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecHostNodeSetParams, CUresult, cuGraphExecHostNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_HOST_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecChildGraphNodeSetParams, CUresult, cuGraphExecChildGraphNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUgraph, childGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecEventRecordNodeSetEvent, CUresult, cuGraphExecEventRecordNodeSetEvent, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecEventWaitNodeSetEvent, CUresult, cuGraphExecEventWaitNodeSetEvent, CUgraphExec, hGraphExec, CUgraphNode, hNode, CUevent, event);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecExternalSemaphoresSignalNodeSetParams, CUresult, cuGraphExecExternalSemaphoresSignalNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecExternalSemaphoresWaitNodeSetParams, CUresult, cuGraphExecExternalSemaphoresWaitNodeSetParams, CUgraphExec, hGraphExec, CUgraphNode, hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS *, nodeParams);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeSetEnabled, CUresult, cuGraphNodeSetEnabled, CUgraphExec, hGraphExec, CUgraphNode, hNode, unsigned int, isEnabled);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphNodeGetEnabled, CUresult, cuGraphNodeGetEnabled, CUgraphExec, hGraphExec, CUgraphNode, hNode, unsigned int *, isEnabled);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphUpload, CUresult, cuGraphUpload, CUgraphExec, hGraphExec, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphLaunch, CUresult, cuGraphLaunch, CUgraphExec, hGraphExec, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecDestroy, CUresult, cuGraphExecDestroy, CUgraphExec, hGraphExec);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDestroy, CUresult, cuGraphDestroy, CUgraph, hGraph);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphExecUpdate_v2, CUresult, cuGraphExecUpdate_v2, CUgraphExec, hGraphExec, CUgraph, hGraph, CUgraphExecUpdateResultInfo *, resultInfo);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeCopyAttributes, CUresult, cuGraphKernelNodeCopyAttributes, CUgraphNode, dst, CUgraphNode, src);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeGetAttribute, CUresult, cuGraphKernelNodeGetAttribute, CUgraphNode, hNode, CUkernelNodeAttrID, attr, CUkernelNodeAttrValue *, value_out);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphKernelNodeSetAttribute, CUresult, cuGraphKernelNodeSetAttribute, CUgraphNode, hNode, CUkernelNodeAttrID, attr, const CUkernelNodeAttrValue *, value);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphDebugDotPrint, CUresult, cuGraphDebugDotPrint, CUgraph, hGraph, const char *, path, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectCreate, CUresult, cuUserObjectCreate, CUuserObject *, object_out, void *, ptr, CUhostFn, destroy, unsigned int, initialRefcount, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectRetain, CUresult, cuUserObjectRetain, CUuserObject, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::UserObjectRelease, CUresult, cuUserObjectRelease, CUuserObject, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphRetainUserObject, CUresult, cuGraphRetainUserObject, CUgraph, graph, CUuserObject, object, unsigned int, count, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphReleaseUserObject, CUresult, cuGraphReleaseUserObject, CUgraph, graph, CUuserObject, object, unsigned int, count);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveBlocksPerMultiprocessor, CUresult, cuOccupancyMaxActiveBlocksPerMultiprocessor, int *, numBlocks, CUfunction, func, int, blockSize, size_t, dynamicSMemSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveBlocksPerMultiprocessorWithFlags, CUresult, cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags, int *, numBlocks, CUfunction, func, int, blockSize, size_t, dynamicSMemSize, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialBlockSize, CUresult, cuOccupancyMaxPotentialBlockSize, int *, minGridSize, int *, blockSize, CUfunction, func, CUoccupancyB2DSize, blockSizeToDynamicSMemSize, size_t, dynamicSMemSize, int, blockSizeLimit);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialBlockSizeWithFlags, CUresult, cuOccupancyMaxPotentialBlockSizeWithFlags, int *, minGridSize, int *, blockSize, CUfunction, func, CUoccupancyB2DSize, blockSizeToDynamicSMemSize, size_t, dynamicSMemSize, int, blockSizeLimit, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyAvailableDynamicSMemPerBlock, CUresult, cuOccupancyAvailableDynamicSMemPerBlock, size_t *, dynamicSmemSize, CUfunction, func, int, numBlocks, int, blockSize);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxPotentialClusterSize, CUresult, cuOccupancyMaxPotentialClusterSize, int *, clusterSize, CUfunction, func, const CUlaunchConfig *, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::OccupancyMaxActiveClusters, CUresult, cuOccupancyMaxActiveClusters, int *, numClusters, CUfunction, func, const CUlaunchConfig *, config);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetArray, CUresult, cuTexRefSetArray, CUtexref, hTexRef, CUarray, hArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmappedArray, CUresult, cuTexRefSetMipmappedArray, CUtexref, hTexRef, CUmipmappedArray, hMipmappedArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress_v2, CUresult, cuTexRefSetAddress_v2, size_t *, ByteOffset, CUtexref, hTexRef, CUdeviceptr, dptr, size_t, bytes);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddress2D_v3, CUresult, cuTexRefSetAddress2D_v3, CUtexref, hTexRef, const CUDA_ARRAY_DESCRIPTOR *, desc, CUdeviceptr, dptr, size_t, Pitch);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFormat, CUresult, cuTexRefSetFormat, CUtexref, hTexRef, CUarray_format, fmt, int, NumPackedComponents);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetAddressMode, CUresult, cuTexRefSetAddressMode, CUtexref, hTexRef, int, dim, CUaddress_mode, am);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFilterMode, CUresult, cuTexRefSetFilterMode, CUtexref, hTexRef, CUfilter_mode, fm);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapFilterMode, CUresult, cuTexRefSetMipmapFilterMode, CUtexref, hTexRef, CUfilter_mode, fm);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapLevelBias, CUresult, cuTexRefSetMipmapLevelBias, CUtexref, hTexRef, float, bias);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMipmapLevelClamp, CUresult, cuTexRefSetMipmapLevelClamp, CUtexref, hTexRef, float, minMipmapLevelClamp, float, maxMipmapLevelClamp);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetMaxAnisotropy, CUresult, cuTexRefSetMaxAnisotropy, CUtexref, hTexRef, unsigned int, maxAniso);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetBorderColor, CUresult, cuTexRefSetBorderColor, CUtexref, hTexRef, float *, pBorderColor);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefSetFlags, CUresult, cuTexRefSetFlags, CUtexref, hTexRef, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddress_v2, CUresult, cuTexRefGetAddress_v2, CUdeviceptr *, pdptr, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetArray, CUresult, cuTexRefGetArray, CUarray *, phArray, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmappedArray, CUresult, cuTexRefGetMipmappedArray, CUmipmappedArray *, phMipmappedArray, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetAddressMode, CUresult, cuTexRefGetAddressMode, CUaddress_mode *, pam, CUtexref, hTexRef, int, dim);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFilterMode, CUresult, cuTexRefGetFilterMode, CUfilter_mode *, pfm, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFormat, CUresult, cuTexRefGetFormat, CUarray_format *, pFormat, int *, pNumChannels, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapFilterMode, CUresult, cuTexRefGetMipmapFilterMode, CUfilter_mode *, pfm, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapLevelBias, CUresult, cuTexRefGetMipmapLevelBias, float *, pbias, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMipmapLevelClamp, CUresult, cuTexRefGetMipmapLevelClamp, float *, pminMipmapLevelClamp, float *, pmaxMipmapLevelClamp, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetMaxAnisotropy, CUresult, cuTexRefGetMaxAnisotropy, int *, pmaxAniso, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetBorderColor, CUresult, cuTexRefGetBorderColor, float *, pBorderColor, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefGetFlags, CUresult, cuTexRefGetFlags, unsigned int *, pFlags, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefCreate, CUresult, cuTexRefCreate, CUtexref *, pTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexRefDestroy, CUresult, cuTexRefDestroy, CUtexref, hTexRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfRefSetArray, CUresult, cuSurfRefSetArray, CUsurfref, hSurfRef, CUarray, hArray, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfRefGetArray, CUresult, cuSurfRefGetArray, CUarray *, phArray, CUsurfref, hSurfRef);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectCreate, CUresult, cuTexObjectCreate, CUtexObject *, pTexObject, const CUDA_RESOURCE_DESC *, pResDesc, const CUDA_TEXTURE_DESC *, pTexDesc, const CUDA_RESOURCE_VIEW_DESC *, pResViewDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectDestroy, CUresult, cuTexObjectDestroy, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetResourceDesc, CUresult, cuTexObjectGetResourceDesc, CUDA_RESOURCE_DESC *, pResDesc, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetTextureDesc, CUresult, cuTexObjectGetTextureDesc, CUDA_TEXTURE_DESC *, pTexDesc, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TexObjectGetResourceViewDesc, CUresult, cuTexObjectGetResourceViewDesc, CUDA_RESOURCE_VIEW_DESC *, pResViewDesc, CUtexObject, texObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfObjectCreate, CUresult, cuSurfObjectCreate, CUsurfObject *, pSurfObject, const CUDA_RESOURCE_DESC *, pResDesc);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfObjectDestroy, CUresult, cuSurfObjectDestroy, CUsurfObject, surfObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::SurfObjectGetResourceDesc, CUresult, cuSurfObjectGetResourceDesc, CUDA_RESOURCE_DESC *, pResDesc, CUsurfObject, surfObject);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapEncodeTiled, CUresult, cuTensorMapEncodeTiled, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, const cuuint32_t *, boxDim, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapEncodeIm2col, CUresult, cuTensorMapEncodeIm2col, CUtensorMap *, tensorMap, CUtensorMapDataType, tensorDataType, cuuint32_t, tensorRank, void *, globalAddress, const cuuint64_t *, globalDim, const cuuint64_t *, globalStrides, const int *, pixelBoxLowerCorner, const int *, pixelBoxUpperCorner, cuuint32_t, channelsPerPixel, cuuint32_t, pixelsPerColumn, const cuuint32_t *, elementStrides, CUtensorMapInterleave, interleave, CUtensorMapSwizzle, swizzle, CUtensorMapL2promotion, l2Promotion, CUtensorMapFloatOOBfill, oobFill);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::TensorMapReplaceAddress, CUresult, cuTensorMapReplaceAddress, CUtensorMap *, tensorMap, void *, globalAddress);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceCanAccessPeer, CUresult, cuDeviceCanAccessPeer, int *, canAccessPeer, CUdevice, dev, CUdevice, peerDev);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxEnablePeerAccess, CUresult, cuCtxEnablePeerAccess, CUcontext, peerContext, unsigned int, Flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CtxDisablePeerAccess, CUresult, cuCtxDisablePeerAccess, CUcontext, peerContext);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::DeviceGetP2PAttribute, CUresult, cuDeviceGetP2PAttribute, int *, value, CUdevice_P2PAttribute, attrib, CUdevice, srcDevice, CUdevice, dstDevice);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnregisterResource, CUresult, cuGraphicsUnregisterResource, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsSubResourceGetMappedArray, CUresult, cuGraphicsSubResourceGetMappedArray, CUarray *, pArray, CUgraphicsResource, resource, unsigned int, arrayIndex, unsigned int, mipLevel);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceGetMappedMipmappedArray, CUresult, cuGraphicsResourceGetMappedMipmappedArray, CUmipmappedArray *, pMipmappedArray, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceGetMappedPointer_v2, CUresult, cuGraphicsResourceGetMappedPointer_v2, CUdeviceptr *, pDevPtr, size_t *, pSize, CUgraphicsResource, resource);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsResourceSetMapFlags_v2, CUresult, cuGraphicsResourceSetMapFlags_v2, CUgraphicsResource, resource, unsigned int, flags);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsMapResources, CUresult, cuGraphicsMapResources, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GraphicsUnmapResources, CUresult, cuGraphicsUnmapResources, unsigned int, count, CUgraphicsResource *, resources, CUstream, hStream);
DEFINE_EXPORT_C_REDIRECT_CALL(GetProcAddress_v2, CUresult, cuGetProcAddress_v2, const char *, symbol, void **, pfn, int, cudaVersion, cuuint64_t, flags, CUdriverProcAddressQueryResult *, symbolStatus);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpGetAttribute, CUresult, cuCoredumpGetAttribute, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpGetAttributeGlobal, CUresult, cuCoredumpGetAttributeGlobal, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpSetAttribute, CUresult, cuCoredumpSetAttribute, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::CoredumpSetAttributeGlobal, CUresult, cuCoredumpSetAttributeGlobal, CUcoredumpSettings, attrib, void *, value, size_t *, size);
DEFINE_EXPORT_C_REDIRECT_CALL(Driver::GetExportTable, CUresult, cuGetExportTable, const void **, ppExportTable, const CUuuid *, pExportTableId);

static const std::unordered_map<std::string, void *> intercept_symbol_map = {
    DLSYM_INTERCEPT_ENTRY(cuGetErrorString),
    DLSYM_INTERCEPT_ENTRY(cuGetErrorName),
    DLSYM_INTERCEPT_ENTRY(cuInit),
    DLSYM_INTERCEPT_ENTRY(cuDriverGetVersion),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGet),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetCount),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetName),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetUuid),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetUuid_v2),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetLuid),
    DLSYM_INTERCEPT_ENTRY(cuDeviceTotalMem_v2),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetTexture1DLinearMaxWidth),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetNvSciSyncAttributes),
    DLSYM_INTERCEPT_ENTRY(cuDeviceSetMemPool),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetMemPool),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetDefaultMemPool),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetExecAffinitySupport),
    DLSYM_INTERCEPT_ENTRY(cuFlushGPUDirectRDMAWrites),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetProperties),
    DLSYM_INTERCEPT_ENTRY(cuDeviceComputeCapability),
    DLSYM_INTERCEPT_ENTRY(cuDevicePrimaryCtxRetain),
    DLSYM_INTERCEPT_ENTRY(cuDevicePrimaryCtxRelease_v2),
    DLSYM_INTERCEPT_ENTRY(cuDevicePrimaryCtxSetFlags_v2),
    DLSYM_INTERCEPT_ENTRY(cuDevicePrimaryCtxGetState),
    DLSYM_INTERCEPT_ENTRY(cuDevicePrimaryCtxReset_v2),
    DLSYM_INTERCEPT_ENTRY(cuCtxCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuCtxCreate_v3),
    DLSYM_INTERCEPT_ENTRY(cuCtxDestroy_v2),
    DLSYM_INTERCEPT_ENTRY(cuCtxPushCurrent_v2),
    DLSYM_INTERCEPT_ENTRY(cuCtxPopCurrent_v2),
    DLSYM_INTERCEPT_ENTRY(cuCtxSetCurrent),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetCurrent),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetDevice),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetFlags),
    DLSYM_INTERCEPT_ENTRY(cuCtxSetFlags),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetId),
    DLSYM_INTERCEPT_ENTRY(cuCtxSynchronize),
    DLSYM_INTERCEPT_ENTRY(cuCtxSetLimit),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetLimit),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetCacheConfig),
    DLSYM_INTERCEPT_ENTRY(cuCtxSetCacheConfig),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetSharedMemConfig),
    DLSYM_INTERCEPT_ENTRY(cuCtxSetSharedMemConfig),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetApiVersion),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetStreamPriorityRange),
    DLSYM_INTERCEPT_ENTRY(cuCtxResetPersistingL2Cache),
    DLSYM_INTERCEPT_ENTRY(cuCtxGetExecAffinity),
    DLSYM_INTERCEPT_ENTRY(cuCtxAttach),
    DLSYM_INTERCEPT_ENTRY(cuCtxDetach),
    DLSYM_INTERCEPT_ENTRY(cuModuleLoad),
    DLSYM_INTERCEPT_ENTRY(cuModuleLoadData),
    DLSYM_INTERCEPT_ENTRY(cuModuleLoadDataEx),
    DLSYM_INTERCEPT_ENTRY(cuModuleLoadFatBinary),
    DLSYM_INTERCEPT_ENTRY(cuModuleUnload),
    DLSYM_INTERCEPT_ENTRY(cuModuleGetLoadingMode),
    DLSYM_INTERCEPT_ENTRY(cuModuleGetFunction),
    DLSYM_INTERCEPT_ENTRY(cuModuleGetGlobal_v2),
    DLSYM_INTERCEPT_ENTRY(cuLinkCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuLinkAddData_v2),
    DLSYM_INTERCEPT_ENTRY(cuLinkAddFile_v2),
    DLSYM_INTERCEPT_ENTRY(cuLinkComplete),
    DLSYM_INTERCEPT_ENTRY(cuLinkDestroy),
    DLSYM_INTERCEPT_ENTRY(cuModuleGetTexRef),
    DLSYM_INTERCEPT_ENTRY(cuModuleGetSurfRef),
    DLSYM_INTERCEPT_ENTRY(cuLibraryLoadData),
    DLSYM_INTERCEPT_ENTRY(cuLibraryLoadFromFile),
    DLSYM_INTERCEPT_ENTRY(cuLibraryUnload),
    DLSYM_INTERCEPT_ENTRY(cuLibraryGetKernel),
    DLSYM_INTERCEPT_ENTRY(cuLibraryGetModule),
    DLSYM_INTERCEPT_ENTRY(cuKernelGetFunction),
    DLSYM_INTERCEPT_ENTRY(cuLibraryGetGlobal),
    DLSYM_INTERCEPT_ENTRY(cuLibraryGetManaged),
    DLSYM_INTERCEPT_ENTRY(cuLibraryGetUnifiedFunction),
    DLSYM_INTERCEPT_ENTRY(cuKernelGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuKernelSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuKernelSetCacheConfig),
    DLSYM_INTERCEPT_ENTRY(cuMemGetInfo_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemAlloc_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemAllocPitch_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemFree_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemGetAddressRange_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemAllocHost_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemFreeHost),
    DLSYM_INTERCEPT_ENTRY(cuMemHostAlloc),
    DLSYM_INTERCEPT_ENTRY(cuMemHostGetDevicePointer_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemHostGetFlags),
    DLSYM_INTERCEPT_ENTRY(cuMemAllocManaged),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetByPCIBusId),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetPCIBusId),
    DLSYM_INTERCEPT_ENTRY(cuIpcGetEventHandle),
    DLSYM_INTERCEPT_ENTRY(cuIpcOpenEventHandle),
    DLSYM_INTERCEPT_ENTRY(cuIpcGetMemHandle),
    DLSYM_INTERCEPT_ENTRY(cuIpcOpenMemHandle_v2),
    DLSYM_INTERCEPT_ENTRY(cuIpcCloseMemHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemHostRegister_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemHostUnregister),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyPeer),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyHtoD_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyDtoH_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyDtoD_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyDtoA_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyAtoD_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyHtoA_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyAtoH_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyAtoA_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy2D_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy2DUnaligned_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy3D_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy3DPeer),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyPeerAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyHtoDAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyDtoHAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyDtoDAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyHtoAAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpyAtoHAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy2DAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy3DAsync_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemcpy3DPeerAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD8_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD16_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD32_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD2D8_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD2D16_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD2D32_v2),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD8Async),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD16Async),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD32Async),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD2D8Async),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD2D16Async),
    DLSYM_INTERCEPT_ENTRY(cuMemsetD2D32Async),
    DLSYM_INTERCEPT_ENTRY(cuArrayCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuArrayGetDescriptor_v2),
    DLSYM_INTERCEPT_ENTRY(cuArrayGetSparseProperties),
    DLSYM_INTERCEPT_ENTRY(cuMipmappedArrayGetSparseProperties),
    DLSYM_INTERCEPT_ENTRY(cuArrayGetMemoryRequirements),
    DLSYM_INTERCEPT_ENTRY(cuMipmappedArrayGetMemoryRequirements),
    DLSYM_INTERCEPT_ENTRY(cuArrayGetPlane),
    DLSYM_INTERCEPT_ENTRY(cuArrayDestroy),
    DLSYM_INTERCEPT_ENTRY(cuArray3DCreate_v2),
    DLSYM_INTERCEPT_ENTRY(cuArray3DGetDescriptor_v2),
    DLSYM_INTERCEPT_ENTRY(cuMipmappedArrayCreate),
    DLSYM_INTERCEPT_ENTRY(cuMipmappedArrayGetLevel),
    DLSYM_INTERCEPT_ENTRY(cuMipmappedArrayDestroy),
    DLSYM_INTERCEPT_ENTRY(cuMemGetHandleForAddressRange),
    DLSYM_INTERCEPT_ENTRY(cuMemAddressReserve),
    DLSYM_INTERCEPT_ENTRY(cuMemAddressFree),
    DLSYM_INTERCEPT_ENTRY(cuMemCreate),
    DLSYM_INTERCEPT_ENTRY(cuMemRelease),
    DLSYM_INTERCEPT_ENTRY(cuMemMap),
    DLSYM_INTERCEPT_ENTRY(cuMemMapArrayAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemUnmap),
    DLSYM_INTERCEPT_ENTRY(cuMemSetAccess),
    DLSYM_INTERCEPT_ENTRY(cuMemGetAccess),
    DLSYM_INTERCEPT_ENTRY(cuMemExportToShareableHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemImportFromShareableHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemGetAllocationGranularity),
    DLSYM_INTERCEPT_ENTRY(cuMemGetAllocationPropertiesFromHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemRetainAllocationHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemFreeAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemAllocAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolTrimTo),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolSetAccess),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolGetAccess),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolCreate),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolDestroy),
    DLSYM_INTERCEPT_ENTRY(cuMemAllocFromPoolAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolExportToShareableHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolImportFromShareableHandle),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolExportPointer),
    DLSYM_INTERCEPT_ENTRY(cuMemPoolImportPointer),
    DLSYM_INTERCEPT_ENTRY(cuMulticastCreate),
    DLSYM_INTERCEPT_ENTRY(cuMulticastAddDevice),
    DLSYM_INTERCEPT_ENTRY(cuMulticastBindMem),
    DLSYM_INTERCEPT_ENTRY(cuMulticastBindAddr),
    DLSYM_INTERCEPT_ENTRY(cuMulticastUnbind),
    DLSYM_INTERCEPT_ENTRY(cuMulticastGetGranularity),
    DLSYM_INTERCEPT_ENTRY(cuPointerGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuMemPrefetchAsync),
    DLSYM_INTERCEPT_ENTRY(cuMemAdvise),
    DLSYM_INTERCEPT_ENTRY(cuMemRangeGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuMemRangeGetAttributes),
    DLSYM_INTERCEPT_ENTRY(cuPointerSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuPointerGetAttributes),
    DLSYM_INTERCEPT_ENTRY(cuStreamCreate),
    DLSYM_INTERCEPT_ENTRY(cuStreamCreateWithPriority),
    DLSYM_INTERCEPT_ENTRY(cuStreamGetPriority),
    DLSYM_INTERCEPT_ENTRY(cuStreamGetFlags),
    DLSYM_INTERCEPT_ENTRY(cuStreamGetId),
    DLSYM_INTERCEPT_ENTRY(cuStreamGetCtx),
    DLSYM_INTERCEPT_ENTRY(cuStreamWaitEvent),
    DLSYM_INTERCEPT_ENTRY(cuStreamAddCallback),
    DLSYM_INTERCEPT_ENTRY(cuStreamBeginCapture_v2),
    DLSYM_INTERCEPT_ENTRY(cuThreadExchangeStreamCaptureMode),
    DLSYM_INTERCEPT_ENTRY(cuStreamEndCapture),
    DLSYM_INTERCEPT_ENTRY(cuStreamIsCapturing),
    DLSYM_INTERCEPT_ENTRY(cuStreamGetCaptureInfo_v2),
    DLSYM_INTERCEPT_ENTRY(cuStreamUpdateCaptureDependencies),
    DLSYM_INTERCEPT_ENTRY(cuStreamAttachMemAsync),
    DLSYM_INTERCEPT_ENTRY(cuStreamQuery),
    DLSYM_INTERCEPT_ENTRY(cuStreamSynchronize),
    DLSYM_INTERCEPT_ENTRY(cuStreamDestroy_v2),
    DLSYM_INTERCEPT_ENTRY(cuStreamCopyAttributes),
    DLSYM_INTERCEPT_ENTRY(cuStreamGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuStreamSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuEventCreate),
    DLSYM_INTERCEPT_ENTRY(cuEventRecord),
    DLSYM_INTERCEPT_ENTRY(cuEventRecordWithFlags),
    DLSYM_INTERCEPT_ENTRY(cuEventQuery),
    DLSYM_INTERCEPT_ENTRY(cuEventSynchronize),
    DLSYM_INTERCEPT_ENTRY(cuEventDestroy_v2),
    DLSYM_INTERCEPT_ENTRY(cuEventElapsedTime),
    DLSYM_INTERCEPT_ENTRY(cuImportExternalMemory),
    DLSYM_INTERCEPT_ENTRY(cuExternalMemoryGetMappedBuffer),
    DLSYM_INTERCEPT_ENTRY(cuExternalMemoryGetMappedMipmappedArray),
    DLSYM_INTERCEPT_ENTRY(cuDestroyExternalMemory),
    DLSYM_INTERCEPT_ENTRY(cuImportExternalSemaphore),
    DLSYM_INTERCEPT_ENTRY(cuSignalExternalSemaphoresAsync),
    DLSYM_INTERCEPT_ENTRY(cuWaitExternalSemaphoresAsync),
    DLSYM_INTERCEPT_ENTRY(cuDestroyExternalSemaphore),
    DLSYM_INTERCEPT_ENTRY(cuStreamWaitValue32_v2),
    DLSYM_INTERCEPT_ENTRY(cuStreamWaitValue64_v2),
    DLSYM_INTERCEPT_ENTRY(cuStreamWriteValue32_v2),
    DLSYM_INTERCEPT_ENTRY(cuStreamWriteValue64_v2),
    DLSYM_INTERCEPT_ENTRY(cuStreamBatchMemOp_v2),
    DLSYM_INTERCEPT_ENTRY(cuFuncGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuFuncSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuFuncSetCacheConfig),
    DLSYM_INTERCEPT_ENTRY(cuFuncSetSharedMemConfig),
    DLSYM_INTERCEPT_ENTRY(cuFuncGetModule),
    DLSYM_INTERCEPT_ENTRY(cuLaunchKernel),
    DLSYM_INTERCEPT_ENTRY(cuLaunchKernelEx),
    DLSYM_INTERCEPT_ENTRY(cuLaunchCooperativeKernel),
    DLSYM_INTERCEPT_ENTRY(cuLaunchCooperativeKernelMultiDevice),
    DLSYM_INTERCEPT_ENTRY(cuLaunchHostFunc),
    DLSYM_INTERCEPT_ENTRY(cuFuncSetBlockShape),
    DLSYM_INTERCEPT_ENTRY(cuFuncSetSharedSize),
    DLSYM_INTERCEPT_ENTRY(cuParamSetSize),
    DLSYM_INTERCEPT_ENTRY(cuParamSeti),
    DLSYM_INTERCEPT_ENTRY(cuParamSetf),
    DLSYM_INTERCEPT_ENTRY(cuParamSetv),
    DLSYM_INTERCEPT_ENTRY(cuLaunch),
    DLSYM_INTERCEPT_ENTRY(cuLaunchGrid),
    DLSYM_INTERCEPT_ENTRY(cuLaunchGridAsync),
    DLSYM_INTERCEPT_ENTRY(cuParamSetTexRef),
    DLSYM_INTERCEPT_ENTRY(cuGraphCreate),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddKernelNode_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphKernelNodeGetParams_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphKernelNodeSetParams_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddMemcpyNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphMemcpyNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphMemcpyNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddMemsetNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphMemsetNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphMemsetNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddHostNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphHostNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphHostNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddChildGraphNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphChildGraphNodeGetGraph),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddEmptyNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddEventRecordNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphEventRecordNodeGetEvent),
    DLSYM_INTERCEPT_ENTRY(cuGraphEventRecordNodeSetEvent),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddEventWaitNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphEventWaitNodeGetEvent),
    DLSYM_INTERCEPT_ENTRY(cuGraphEventWaitNodeSetEvent),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddExternalSemaphoresSignalNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphExternalSemaphoresSignalNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExternalSemaphoresSignalNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddExternalSemaphoresWaitNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphExternalSemaphoresWaitNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExternalSemaphoresWaitNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddBatchMemOpNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphBatchMemOpNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphBatchMemOpNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecBatchMemOpNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddMemAllocNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphMemAllocNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddMemFreeNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphMemFreeNodeGetParams),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGraphMemTrim),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetGraphMemAttribute),
    DLSYM_INTERCEPT_ENTRY(cuDeviceSetGraphMemAttribute),
    DLSYM_INTERCEPT_ENTRY(cuGraphClone),
    DLSYM_INTERCEPT_ENTRY(cuGraphNodeFindInClone),
    DLSYM_INTERCEPT_ENTRY(cuGraphNodeGetType),
    DLSYM_INTERCEPT_ENTRY(cuGraphGetNodes),
    DLSYM_INTERCEPT_ENTRY(cuGraphGetRootNodes),
    DLSYM_INTERCEPT_ENTRY(cuGraphGetEdges),
    DLSYM_INTERCEPT_ENTRY(cuGraphNodeGetDependencies),
    DLSYM_INTERCEPT_ENTRY(cuGraphNodeGetDependentNodes),
    DLSYM_INTERCEPT_ENTRY(cuGraphAddDependencies),
    DLSYM_INTERCEPT_ENTRY(cuGraphRemoveDependencies),
    DLSYM_INTERCEPT_ENTRY(cuGraphDestroyNode),
    DLSYM_INTERCEPT_ENTRY(cuGraphInstantiateWithFlags),
    DLSYM_INTERCEPT_ENTRY(cuGraphInstantiateWithParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecGetFlags),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecKernelNodeSetParams_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecMemcpyNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecMemsetNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecHostNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecChildGraphNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecEventRecordNodeSetEvent),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecEventWaitNodeSetEvent),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecExternalSemaphoresSignalNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecExternalSemaphoresWaitNodeSetParams),
    DLSYM_INTERCEPT_ENTRY(cuGraphNodeSetEnabled),
    DLSYM_INTERCEPT_ENTRY(cuGraphNodeGetEnabled),
    DLSYM_INTERCEPT_ENTRY(cuGraphUpload),
    DLSYM_INTERCEPT_ENTRY(cuGraphLaunch),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecDestroy),
    DLSYM_INTERCEPT_ENTRY(cuGraphDestroy),
    DLSYM_INTERCEPT_ENTRY(cuGraphExecUpdate_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphKernelNodeCopyAttributes),
    DLSYM_INTERCEPT_ENTRY(cuGraphKernelNodeGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuGraphKernelNodeSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuGraphDebugDotPrint),
    DLSYM_INTERCEPT_ENTRY(cuUserObjectCreate),
    DLSYM_INTERCEPT_ENTRY(cuUserObjectRetain),
    DLSYM_INTERCEPT_ENTRY(cuUserObjectRelease),
    DLSYM_INTERCEPT_ENTRY(cuGraphRetainUserObject),
    DLSYM_INTERCEPT_ENTRY(cuGraphReleaseUserObject),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyMaxActiveBlocksPerMultiprocessor),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyMaxPotentialBlockSize),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyMaxPotentialBlockSizeWithFlags),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyAvailableDynamicSMemPerBlock),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyMaxPotentialClusterSize),
    DLSYM_INTERCEPT_ENTRY(cuOccupancyMaxActiveClusters),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetArray),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetMipmappedArray),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetAddress_v2),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetAddress2D_v3),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetFormat),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetAddressMode),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetFilterMode),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetMipmapFilterMode),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetMipmapLevelBias),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetMipmapLevelClamp),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetMaxAnisotropy),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetBorderColor),
    DLSYM_INTERCEPT_ENTRY(cuTexRefSetFlags),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetAddress_v2),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetArray),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetMipmappedArray),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetAddressMode),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetFilterMode),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetFormat),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetMipmapFilterMode),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetMipmapLevelBias),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetMipmapLevelClamp),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetMaxAnisotropy),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetBorderColor),
    DLSYM_INTERCEPT_ENTRY(cuTexRefGetFlags),
    DLSYM_INTERCEPT_ENTRY(cuTexRefCreate),
    DLSYM_INTERCEPT_ENTRY(cuTexRefDestroy),
    DLSYM_INTERCEPT_ENTRY(cuSurfRefSetArray),
    DLSYM_INTERCEPT_ENTRY(cuSurfRefGetArray),
    DLSYM_INTERCEPT_ENTRY(cuTexObjectCreate),
    DLSYM_INTERCEPT_ENTRY(cuTexObjectDestroy),
    DLSYM_INTERCEPT_ENTRY(cuTexObjectGetResourceDesc),
    DLSYM_INTERCEPT_ENTRY(cuTexObjectGetTextureDesc),
    DLSYM_INTERCEPT_ENTRY(cuTexObjectGetResourceViewDesc),
    DLSYM_INTERCEPT_ENTRY(cuSurfObjectCreate),
    DLSYM_INTERCEPT_ENTRY(cuSurfObjectDestroy),
    DLSYM_INTERCEPT_ENTRY(cuSurfObjectGetResourceDesc),
    DLSYM_INTERCEPT_ENTRY(cuTensorMapEncodeTiled),
    DLSYM_INTERCEPT_ENTRY(cuTensorMapEncodeIm2col),
    DLSYM_INTERCEPT_ENTRY(cuTensorMapReplaceAddress),
    DLSYM_INTERCEPT_ENTRY(cuDeviceCanAccessPeer),
    DLSYM_INTERCEPT_ENTRY(cuCtxEnablePeerAccess),
    DLSYM_INTERCEPT_ENTRY(cuCtxDisablePeerAccess),
    DLSYM_INTERCEPT_ENTRY(cuDeviceGetP2PAttribute),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsUnregisterResource),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsSubResourceGetMappedArray),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsResourceGetMappedMipmappedArray),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsResourceGetMappedPointer_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsResourceSetMapFlags_v2),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsMapResources),
    DLSYM_INTERCEPT_ENTRY(cuGraphicsUnmapResources),
    DLSYM_INTERCEPT_ENTRY(cuGetProcAddress_v2),
    DLSYM_INTERCEPT_ENTRY(cuCoredumpGetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuCoredumpGetAttributeGlobal),
    DLSYM_INTERCEPT_ENTRY(cuCoredumpSetAttribute),
    DLSYM_INTERCEPT_ENTRY(cuCoredumpSetAttributeGlobal),
    DLSYM_INTERCEPT_ENTRY(cuGetExportTable),
};

DEFINE_DLSYM_INTERCEPT(intercept_symbol_map);

// generated by: python3 ../../scripts/cuda_func_map.py -f /usr/local/cuda/include/cudaTypedefs.h -I /usr/lib/gcc/x86_64-linux-gnu/11/include -I /usr/local/cuda/include
static const std::unordered_map<std::string, std::map<int, void *>> intercept_funcs = {
    { "cuGetErrorString"                                    , {{  6000, (void *)cuGetErrorString                                    }}},
    { "cuGetErrorName"                                      , {{  6000, (void *)cuGetErrorName                                      }}},
    { "cuInit"                                              , {{  2000, (void *)cuInit                                              }}},
    { "cuDriverGetVersion"                                  , {{  2020, (void *)cuDriverGetVersion                                  }}},
    { "cuDeviceGet"                                         , {{  2000, (void *)cuDeviceGet                                         }}},
    { "cuDeviceGetCount"                                    , {{  2000, (void *)cuDeviceGetCount                                    }}},
    { "cuDeviceGetName"                                     , {{  2000, (void *)cuDeviceGetName                                     }}},
    { "cuDeviceGetUuid"                                     , {{ 11040, (void *)cuDeviceGetUuid                                     }, {  9020, (void *)cuDeviceGetUuid_v2               }}},
    { "cuDeviceGetLuid"                                     , {{ 10000, (void *)cuDeviceGetLuid                                     }}},
    { "cuDeviceTotalMem"                                    , {{  3020, (void *)cuDeviceTotalMem                                    }}},
    { "cuDeviceGetTexture1DLinearMaxWidth"                  , {{ 11010, (void *)cuDeviceGetTexture1DLinearMaxWidth                  }}},
    { "cuDeviceGetAttribute"                                , {{  2000, (void *)cuDeviceGetAttribute                                }}},
    { "cuDeviceGetNvSciSyncAttributes"                      , {{ 10020, (void *)cuDeviceGetNvSciSyncAttributes                      }}},
    { "cuDeviceSetMemPool"                                  , {{ 11020, (void *)cuDeviceSetMemPool                                  }}},
    { "cuDeviceGetMemPool"                                  , {{ 11020, (void *)cuDeviceGetMemPool                                  }}},
    { "cuDeviceGetDefaultMemPool"                           , {{ 11020, (void *)cuDeviceGetDefaultMemPool                           }}},
    { "cuDeviceGetProperties"                               , {{  2000, (void *)cuDeviceGetProperties                               }}},
    { "cuDeviceComputeCapability"                           , {{  2000, (void *)cuDeviceComputeCapability                           }}},
    { "cuDevicePrimaryCtxRetain"                            , {{  7000, (void *)cuDevicePrimaryCtxRetain                            }}},
    { "cuDevicePrimaryCtxRelease"                           , {{ 11000, (void *)cuDevicePrimaryCtxRelease                           }}},
    { "cuDevicePrimaryCtxSetFlags"                          , {{ 11000, (void *)cuDevicePrimaryCtxSetFlags                          }}},
    { "cuDevicePrimaryCtxGetState"                          , {{  7000, (void *)cuDevicePrimaryCtxGetState                          }}},
    { "cuDevicePrimaryCtxReset"                             , {{ 11000, (void *)cuDevicePrimaryCtxReset                             }}},
    { "cuDeviceGetExecAffinitySupport"                      , {{ 11040, (void *)cuDeviceGetExecAffinitySupport                      }}},
    { "cuCtxCreate"                                         , {{ 11040, (void *)cuCtxCreate                                         }, {  3020, (void *)cuCtxCreate_v2                   }}},
    { "cuCtxGetId"                                          , {{ 12000, (void *)cuCtxGetId                                          }}},
    { "cuCtxDestroy"                                        , {{  4000, (void *)cuCtxDestroy                                        }}},
    { "cuCtxPushCurrent"                                    , {{  4000, (void *)cuCtxPushCurrent                                    }}},
    { "cuCtxPopCurrent"                                     , {{  4000, (void *)cuCtxPopCurrent                                     }}},
    { "cuCtxSetCurrent"                                     , {{  4000, (void *)cuCtxSetCurrent                                     }}},
    { "cuCtxGetCurrent"                                     , {{  4000, (void *)cuCtxGetCurrent                                     }}},
    { "cuCtxGetDevice"                                      , {{  2000, (void *)cuCtxGetDevice                                      }}},
    { "cuCtxGetFlags"                                       , {{  7000, (void *)cuCtxGetFlags                                       }}},
    { "cuCtxSetFlags"                                       , {{ 12010, (void *)cuCtxSetFlags                                       }}},
    { "cuCtxSynchronize"                                    , {{  2000, (void *)cuCtxSynchronize                                    }}},
    { "cuCtxSetLimit"                                       , {{  3010, (void *)cuCtxSetLimit                                       }}},
    { "cuCtxGetLimit"                                       , {{  3010, (void *)cuCtxGetLimit                                       }}},
    { "cuCtxGetCacheConfig"                                 , {{  3020, (void *)cuCtxGetCacheConfig                                 }}},
    { "cuCtxSetCacheConfig"                                 , {{  3020, (void *)cuCtxSetCacheConfig                                 }}},
    { "cuCtxGetSharedMemConfig"                             , {{  4020, (void *)cuCtxGetSharedMemConfig                             }}},
    { "cuCtxSetSharedMemConfig"                             , {{  4020, (void *)cuCtxSetSharedMemConfig                             }}},
    { "cuCtxGetApiVersion"                                  , {{  3020, (void *)cuCtxGetApiVersion                                  }}},
    { "cuCtxGetStreamPriorityRange"                         , {{  5050, (void *)cuCtxGetStreamPriorityRange                         }}},
    { "cuCtxResetPersistingL2Cache"                         , {{ 11000, (void *)cuCtxResetPersistingL2Cache                         }}},
    { "cuCtxAttach"                                         , {{  2000, (void *)cuCtxAttach                                         }}},
    { "cuCtxDetach"                                         , {{  2000, (void *)cuCtxDetach                                         }}},
    { "cuCtxGetExecAffinity"                                , {{ 11040, (void *)cuCtxGetExecAffinity                                }}},
    { "cuModuleLoad"                                        , {{  2000, (void *)cuModuleLoad                                        }}},
    { "cuModuleLoadData"                                    , {{  2000, (void *)cuModuleLoadData                                    }}},
    { "cuModuleLoadDataEx"                                  , {{  2010, (void *)cuModuleLoadDataEx                                  }}},
    { "cuModuleLoadFatBinary"                               , {{  2000, (void *)cuModuleLoadFatBinary                               }}},
    { "cuModuleUnload"                                      , {{  2000, (void *)cuModuleUnload                                      }}},
    { "cuModuleGetFunction"                                 , {{  2000, (void *)cuModuleGetFunction                                 }}},
    { "cuModuleGetGlobal"                                   , {{  3020, (void *)cuModuleGetGlobal                                   }}},
    { "cuModuleGetTexRef"                                   , {{  2000, (void *)cuModuleGetTexRef                                   }}},
    { "cuModuleGetSurfRef"                                  , {{  3000, (void *)cuModuleGetSurfRef                                  }}},
    { "cuLinkCreate"                                        , {{  6050, (void *)cuLinkCreate                                        }}},
    { "cuLinkAddData"                                       , {{  6050, (void *)cuLinkAddData                                       }}},
    { "cuLinkAddFile"                                       , {{  6050, (void *)cuLinkAddFile                                       }}},
    { "cuLinkComplete"                                      , {{  5050, (void *)cuLinkComplete                                      }}},
    { "cuLinkDestroy"                                       , {{  5050, (void *)cuLinkDestroy                                       }}},
    { "cuMemGetInfo"                                        , {{  3020, (void *)cuMemGetInfo                                        }}},
    { "cuMemAlloc"                                          , {{  3020, (void *)cuMemAlloc                                          }}},
    { "cuMemAllocPitch"                                     , {{  3020, (void *)cuMemAllocPitch                                     }}},
    { "cuMemFree"                                           , {{  3020, (void *)cuMemFree                                           }}},
    { "cuMemGetAddressRange"                                , {{  3020, (void *)cuMemGetAddressRange                                }}},
    { "cuMemAllocHost"                                      , {{  3020, (void *)cuMemAllocHost                                      }}},
    { "cuMemFreeHost"                                       , {{  2000, (void *)cuMemFreeHost                                       }}},
    { "cuMemHostAlloc"                                      , {{  2020, (void *)cuMemHostAlloc                                      }}},
    { "cuMemHostGetDevicePointer"                           , {{  3020, (void *)cuMemHostGetDevicePointer                           }}},
    { "cuMemHostGetFlags"                                   , {{  2030, (void *)cuMemHostGetFlags                                   }}},
    { "cuMemAllocManaged"                                   , {{  6000, (void *)cuMemAllocManaged                                   }}},
    { "cuDeviceGetByPCIBusId"                               , {{  4010, (void *)cuDeviceGetByPCIBusId                               }}},
    { "cuDeviceGetPCIBusId"                                 , {{  4010, (void *)cuDeviceGetPCIBusId                                 }}},
    { "cuIpcGetEventHandle"                                 , {{  4010, (void *)cuIpcGetEventHandle                                 }}},
    { "cuIpcOpenEventHandle"                                , {{  4010, (void *)cuIpcOpenEventHandle                                }}},
    { "cuIpcGetMemHandle"                                   , {{  4010, (void *)cuIpcGetMemHandle                                   }}},
    { "cuIpcOpenMemHandle"                                  , {{ 11000, (void *)cuIpcOpenMemHandle                                  }}},
    { "cuIpcCloseMemHandle"                                 , {{  4010, (void *)cuIpcCloseMemHandle                                 }}},
    { "cuMemHostRegister"                                   , {{  6050, (void *)cuMemHostRegister                                   }}},
    { "cuMemHostUnregister"                                 , {{  4000, (void *)cuMemHostUnregister                                 }}},
    { "cuArrayCreate"                                       , {{  3020, (void *)cuArrayCreate                                       }}},
    { "cuArrayGetDescriptor"                                , {{  3020, (void *)cuArrayGetDescriptor                                }}},
    { "cuArrayGetSparseProperties"                          , {{ 11010, (void *)cuArrayGetSparseProperties                          }}},
    { "cuMipmappedArrayGetSparseProperties"                 , {{ 11010, (void *)cuMipmappedArrayGetSparseProperties                 }}},
    { "cuArrayGetMemoryRequirements"                        , {{ 11060, (void *)cuArrayGetMemoryRequirements                        }}},
    { "cuMipmappedArrayGetMemoryRequirements"               , {{ 11060, (void *)cuMipmappedArrayGetMemoryRequirements               }}},
    { "cuArrayGetPlane"                                     , {{ 11020, (void *)cuArrayGetPlane                                     }}},
    { "cuArrayDestroy"                                      , {{  2000, (void *)cuArrayDestroy                                      }}},
    { "cuArray3DCreate"                                     , {{  3020, (void *)cuArray3DCreate                                     }}},
    { "cuArray3DGetDescriptor"                              , {{  3020, (void *)cuArray3DGetDescriptor                              }}},
    { "cuMipmappedArrayCreate"                              , {{  5000, (void *)cuMipmappedArrayCreate                              }}},
    { "cuMipmappedArrayGetLevel"                            , {{  5000, (void *)cuMipmappedArrayGetLevel                            }}},
    { "cuMipmappedArrayDestroy"                             , {{  5000, (void *)cuMipmappedArrayDestroy                             }}},
    { "cuMemAddressReserve"                                 , {{ 10020, (void *)cuMemAddressReserve                                 }}},
    { "cuMemAddressFree"                                    , {{ 10020, (void *)cuMemAddressFree                                    }}},
    { "cuMemCreate"                                         , {{ 10020, (void *)cuMemCreate                                         }}},
    { "cuMemRelease"                                        , {{ 10020, (void *)cuMemRelease                                        }}},
    { "cuMemMap"                                            , {{ 10020, (void *)cuMemMap                                            }}},
    { "cuMemUnmap"                                          , {{ 10020, (void *)cuMemUnmap                                          }}},
    { "cuMemSetAccess"                                      , {{ 10020, (void *)cuMemSetAccess                                      }}},
    { "cuMemGetAccess"                                      , {{ 10020, (void *)cuMemGetAccess                                      }}},
    { "cuMemExportToShareableHandle"                        , {{ 10020, (void *)cuMemExportToShareableHandle                        }}},
    { "cuMemImportFromShareableHandle"                      , {{ 10020, (void *)cuMemImportFromShareableHandle                      }}},
    { "cuMemGetAllocationGranularity"                       , {{ 10020, (void *)cuMemGetAllocationGranularity                       }}},
    { "cuMemGetAllocationPropertiesFromHandle"              , {{ 10020, (void *)cuMemGetAllocationPropertiesFromHandle              }}},
    { "cuMemRetainAllocationHandle"                         , {{ 11000, (void *)cuMemRetainAllocationHandle                         }}},
    { "cuMemPoolTrimTo"                                     , {{ 11020, (void *)cuMemPoolTrimTo                                     }}},
    { "cuMemPoolSetAttribute"                               , {{ 11020, (void *)cuMemPoolSetAttribute                               }}},
    { "cuMemPoolGetAttribute"                               , {{ 11020, (void *)cuMemPoolGetAttribute                               }}},
    { "cuMemPoolSetAccess"                                  , {{ 11020, (void *)cuMemPoolSetAccess                                  }}},
    { "cuMemPoolGetAccess"                                  , {{ 11020, (void *)cuMemPoolGetAccess                                  }}},
    { "cuMemPoolCreate"                                     , {{ 11020, (void *)cuMemPoolCreate                                     }}},
    { "cuMemPoolDestroy"                                    , {{ 11020, (void *)cuMemPoolDestroy                                    }}},
    { "cuMemPoolExportToShareableHandle"                    , {{ 11020, (void *)cuMemPoolExportToShareableHandle                    }}},
    { "cuMemPoolImportFromShareableHandle"                  , {{ 11020, (void *)cuMemPoolImportFromShareableHandle                  }}},
    { "cuMemPoolExportPointer"                              , {{ 11020, (void *)cuMemPoolExportPointer                              }}},
    { "cuMemPoolImportPointer"                              , {{ 11020, (void *)cuMemPoolImportPointer                              }}},
    { "cuPointerGetAttribute"                               , {{  4000, (void *)cuPointerGetAttribute                               }}},
    { "cuMemAdvise"                                         , {{  8000, (void *)cuMemAdvise                                         }}},
    { "cuMemRangeGetAttribute"                              , {{  8000, (void *)cuMemRangeGetAttribute                              }}},
    { "cuMemRangeGetAttributes"                             , {{  8000, (void *)cuMemRangeGetAttributes                             }}},
    { "cuMulticastCreate"                                   , {{ 12010, (void *)cuMulticastCreate                                   }}},
    { "cuMulticastAddDevice"                                , {{ 12010, (void *)cuMulticastAddDevice                                }}},
    { "cuMulticastBindMem"                                  , {{ 12010, (void *)cuMulticastBindMem                                  }}},
    { "cuMulticastBindAddr"                                 , {{ 12010, (void *)cuMulticastBindAddr                                 }}},
    { "cuMulticastUnbind"                                   , {{ 12010, (void *)cuMulticastUnbind                                   }}},
    { "cuMulticastGetGranularity"                           , {{ 12010, (void *)cuMulticastGetGranularity                           }}},
    { "cuPointerSetAttribute"                               , {{  6000, (void *)cuPointerSetAttribute                               }}},
    { "cuPointerGetAttributes"                              , {{  7000, (void *)cuPointerGetAttributes                              }}},
    { "cuStreamCreate"                                      , {{  2000, (void *)cuStreamCreate                                      }}},
    { "cuStreamCreateWithPriority"                          , {{  5050, (void *)cuStreamCreateWithPriority                          }}},
    { "cuStreamGetId"                                       , {{ 12000, (void *)cuStreamGetId                                       }}},
    { "cuThreadExchangeStreamCaptureMode"                   , {{ 10010, (void *)cuThreadExchangeStreamCaptureMode                   }}},
    { "cuStreamDestroy"                                     , {{  4000, (void *)cuStreamDestroy                                     }}},
    { "cuEventCreate"                                       , {{  2000, (void *)cuEventCreate                                       }}},
    { "cuEventQuery"                                        , {{  2000, (void *)cuEventQuery                                        }}},
    { "cuEventSynchronize"                                  , {{  2000, (void *)cuEventSynchronize                                  }}},
    { "cuEventDestroy"                                      , {{  4000, (void *)cuEventDestroy                                      }}},
    { "cuEventElapsedTime"                                  , {{  2000, (void *)cuEventElapsedTime                                  }}},
    { "cuImportExternalMemory"                              , {{ 10000, (void *)cuImportExternalMemory                              }}},
    { "cuExternalMemoryGetMappedBuffer"                     , {{ 10000, (void *)cuExternalMemoryGetMappedBuffer                     }}},
    { "cuExternalMemoryGetMappedMipmappedArray"             , {{ 10000, (void *)cuExternalMemoryGetMappedMipmappedArray             }}},
    { "cuDestroyExternalMemory"                             , {{ 10000, (void *)cuDestroyExternalMemory                             }}},
    { "cuImportExternalSemaphore"                           , {{ 10000, (void *)cuImportExternalSemaphore                           }}},
    { "cuDestroyExternalSemaphore"                          , {{ 10000, (void *)cuDestroyExternalSemaphore                          }}},
    { "cuFuncGetAttribute"                                  , {{  2020, (void *)cuFuncGetAttribute                                  }}},
    { "cuFuncSetAttribute"                                  , {{  9000, (void *)cuFuncSetAttribute                                  }}},
    { "cuFuncSetCacheConfig"                                , {{  3000, (void *)cuFuncSetCacheConfig                                }}},
    { "cuFuncSetSharedMemConfig"                            , {{  4020, (void *)cuFuncSetSharedMemConfig                            }}},
    { "cuLaunchCooperativeKernelMultiDevice"                , {{  9000, (void *)cuLaunchCooperativeKernelMultiDevice                }}},
    { "cuFuncSetBlockShape"                                 , {{  2000, (void *)cuFuncSetBlockShape                                 }}},
    { "cuFuncSetSharedSize"                                 , {{  2000, (void *)cuFuncSetSharedSize                                 }}},
    { "cuParamSetSize"                                      , {{  2000, (void *)cuParamSetSize                                      }}},
    { "cuParamSeti"                                         , {{  2000, (void *)cuParamSeti                                         }}},
    { "cuParamSetf"                                         , {{  2000, (void *)cuParamSetf                                         }}},
    { "cuParamSetv"                                         , {{  2000, (void *)cuParamSetv                                         }}},
    { "cuLaunch"                                            , {{  2000, (void *)cuLaunch                                            }}},
    { "cuLaunchGrid"                                        , {{  2000, (void *)cuLaunchGrid                                        }}},
    { "cuLaunchGridAsync"                                   , {{  2000, (void *)cuLaunchGridAsync                                   }}},
    { "cuParamSetTexRef"                                    , {{  2000, (void *)cuParamSetTexRef                                    }}},
    { "cuGraphCreate"                                       , {{ 10000, (void *)cuGraphCreate                                       }}},
    { "cuGraphAddKernelNode"                                , {{ 10000, (void *)cuGraphAddKernelNode                                }, { 12000, (void *)cuGraphAddKernelNode_v2          }}},
    { "cuGraphKernelNodeGetParams"                          , {{ 10000, (void *)cuGraphKernelNodeGetParams                          }, { 12000, (void *)cuGraphKernelNodeGetParams_v2    }}},
    { "cuGraphKernelNodeSetParams"                          , {{ 10000, (void *)cuGraphKernelNodeSetParams                          }, { 12000, (void *)cuGraphKernelNodeSetParams_v2    }}},
    { "cuGraphAddMemcpyNode"                                , {{ 10000, (void *)cuGraphAddMemcpyNode                                }}},
    { "cuGraphMemcpyNodeGetParams"                          , {{ 10000, (void *)cuGraphMemcpyNodeGetParams                          }}},
    { "cuGraphMemcpyNodeSetParams"                          , {{ 10000, (void *)cuGraphMemcpyNodeSetParams                          }}},
    { "cuGraphAddMemsetNode"                                , {{ 10000, (void *)cuGraphAddMemsetNode                                }}},
    { "cuGraphMemsetNodeGetParams"                          , {{ 10000, (void *)cuGraphMemsetNodeGetParams                          }}},
    { "cuGraphMemsetNodeSetParams"                          , {{ 10000, (void *)cuGraphMemsetNodeSetParams                          }}},
    { "cuGraphAddHostNode"                                  , {{ 10000, (void *)cuGraphAddHostNode                                  }}},
    { "cuGraphHostNodeGetParams"                            , {{ 10000, (void *)cuGraphHostNodeGetParams                            }}},
    { "cuGraphHostNodeSetParams"                            , {{ 10000, (void *)cuGraphHostNodeSetParams                            }}},
    { "cuGraphAddChildGraphNode"                            , {{ 10000, (void *)cuGraphAddChildGraphNode                            }}},
    { "cuGraphChildGraphNodeGetGraph"                       , {{ 10000, (void *)cuGraphChildGraphNodeGetGraph                       }}},
    { "cuGraphAddEmptyNode"                                 , {{ 10000, (void *)cuGraphAddEmptyNode                                 }}},
    { "cuGraphAddEventRecordNode"                           , {{ 11010, (void *)cuGraphAddEventRecordNode                           }}},
    { "cuGraphEventRecordNodeGetEvent"                      , {{ 11010, (void *)cuGraphEventRecordNodeGetEvent                      }}},
    { "cuGraphEventRecordNodeSetEvent"                      , {{ 11010, (void *)cuGraphEventRecordNodeSetEvent                      }}},
    { "cuGraphAddEventWaitNode"                             , {{ 11010, (void *)cuGraphAddEventWaitNode                             }}},
    { "cuGraphEventWaitNodeGetEvent"                        , {{ 11010, (void *)cuGraphEventWaitNodeGetEvent                        }}},
    { "cuGraphEventWaitNodeSetEvent"                        , {{ 11010, (void *)cuGraphEventWaitNodeSetEvent                        }}},
    { "cuGraphAddExternalSemaphoresSignalNode"              , {{ 11020, (void *)cuGraphAddExternalSemaphoresSignalNode              }}},
    { "cuGraphExternalSemaphoresSignalNodeGetParams"        , {{ 11020, (void *)cuGraphExternalSemaphoresSignalNodeGetParams        }}},
    { "cuGraphExternalSemaphoresSignalNodeSetParams"        , {{ 11020, (void *)cuGraphExternalSemaphoresSignalNodeSetParams        }}},
    { "cuGraphAddExternalSemaphoresWaitNode"                , {{ 11020, (void *)cuGraphAddExternalSemaphoresWaitNode                }}},
    { "cuGraphExternalSemaphoresWaitNodeGetParams"          , {{ 11020, (void *)cuGraphExternalSemaphoresWaitNodeGetParams          }}},
    { "cuGraphExternalSemaphoresWaitNodeSetParams"          , {{ 11020, (void *)cuGraphExternalSemaphoresWaitNodeSetParams          }}},
    { "cuGraphAddBatchMemOpNode"                            , {{ 11070, (void *)cuGraphAddBatchMemOpNode                            }}},
    { "cuGraphBatchMemOpNodeGetParams"                      , {{ 11070, (void *)cuGraphBatchMemOpNodeGetParams                      }}},
    { "cuGraphBatchMemOpNodeSetParams"                      , {{ 11070, (void *)cuGraphBatchMemOpNodeSetParams                      }}},
    { "cuGraphExecBatchMemOpNodeSetParams"                  , {{ 11070, (void *)cuGraphExecBatchMemOpNodeSetParams                  }}},
    { "cuGraphClone"                                        , {{ 10000, (void *)cuGraphClone                                        }}},
    { "cuGraphNodeFindInClone"                              , {{ 10000, (void *)cuGraphNodeFindInClone                              }}},
    { "cuGraphNodeGetType"                                  , {{ 10000, (void *)cuGraphNodeGetType                                  }}},
    { "cuGraphGetNodes"                                     , {{ 10000, (void *)cuGraphGetNodes                                     }}},
    { "cuGraphGetRootNodes"                                 , {{ 10000, (void *)cuGraphGetRootNodes                                 }}},
    { "cuGraphGetEdges"                                     , {{ 10000, (void *)cuGraphGetEdges                                     }}},
    { "cuGraphNodeGetDependencies"                          , {{ 10000, (void *)cuGraphNodeGetDependencies                          }}},
    { "cuGraphNodeGetDependentNodes"                        , {{ 10000, (void *)cuGraphNodeGetDependentNodes                        }}},
    { "cuGraphAddDependencies"                              , {{ 10000, (void *)cuGraphAddDependencies                              }}},
    { "cuGraphRemoveDependencies"                           , {{ 10000, (void *)cuGraphRemoveDependencies                           }}},
    { "cuGraphDestroyNode"                                  , {{ 10000, (void *)cuGraphDestroyNode                                  }}},
    { "cuGraphInstantiateWithFlags"                         , {{ 11040, (void *)cuGraphInstantiateWithFlags                         }}},
    { "cuGraphExecGetFlags"                                 , {{ 12000, (void *)cuGraphExecGetFlags                                 }}},
    { "cuGraphExecKernelNodeSetParams"                      , {{ 10010, (void *)cuGraphExecKernelNodeSetParams                      }, { 12000, (void *)cuGraphExecKernelNodeSetParams_v2}}},
    { "cuGraphExecMemcpyNodeSetParams"                      , {{ 10020, (void *)cuGraphExecMemcpyNodeSetParams                      }}},
    { "cuGraphExecMemsetNodeSetParams"                      , {{ 10020, (void *)cuGraphExecMemsetNodeSetParams                      }}},
    { "cuGraphExecHostNodeSetParams"                        , {{ 10020, (void *)cuGraphExecHostNodeSetParams                        }}},
    { "cuGraphExecChildGraphNodeSetParams"                  , {{ 11010, (void *)cuGraphExecChildGraphNodeSetParams                  }}},
    { "cuGraphExecEventRecordNodeSetEvent"                  , {{ 11010, (void *)cuGraphExecEventRecordNodeSetEvent                  }}},
    { "cuGraphExecEventWaitNodeSetEvent"                    , {{ 11010, (void *)cuGraphExecEventWaitNodeSetEvent                    }}},
    { "cuGraphExecExternalSemaphoresSignalNodeSetParams"    , {{ 11020, (void *)cuGraphExecExternalSemaphoresSignalNodeSetParams    }}},
    { "cuGraphExecExternalSemaphoresWaitNodeSetParams"      , {{ 11020, (void *)cuGraphExecExternalSemaphoresWaitNodeSetParams      }}},
    { "cuGraphExecDestroy"                                  , {{ 10000, (void *)cuGraphExecDestroy                                  }}},
    { "cuGraphDestroy"                                      , {{ 10000, (void *)cuGraphDestroy                                      }}},
    { "cuGraphExecUpdate"                                   , {{ 10020, (void *)cuGraphExecUpdate                                   }, { 12000, (void *)cuGraphExecUpdate_v2             }}},
    { "cuGraphKernelNodeCopyAttributes"                     , {{ 11000, (void *)cuGraphKernelNodeCopyAttributes                     }}},
    { "cuGraphKernelNodeGetAttribute"                       , {{ 11000, (void *)cuGraphKernelNodeGetAttribute                       }}},
    { "cuGraphKernelNodeSetAttribute"                       , {{ 11000, (void *)cuGraphKernelNodeSetAttribute                       }}},
    { "cuGraphDebugDotPrint"                                , {{ 11030, (void *)cuGraphDebugDotPrint                                }}},
    { "cuGraphAddMemAllocNode"                              , {{ 11040, (void *)cuGraphAddMemAllocNode                              }}},
    { "cuGraphMemAllocNodeGetParams"                        , {{ 11040, (void *)cuGraphMemAllocNodeGetParams                        }}},
    { "cuGraphAddMemFreeNode"                               , {{ 11040, (void *)cuGraphAddMemFreeNode                               }}},
    { "cuGraphMemFreeNodeGetParams"                         , {{ 11040, (void *)cuGraphMemFreeNodeGetParams                         }}},
    { "cuGraphNodeSetEnabled"                               , {{ 11060, (void *)cuGraphNodeSetEnabled                               }}},
    { "cuGraphNodeGetEnabled"                               , {{ 11060, (void *)cuGraphNodeGetEnabled                               }}},
    { "cuDeviceGraphMemTrim"                                , {{ 11040, (void *)cuDeviceGraphMemTrim                                }}},
    { "cuDeviceGetGraphMemAttribute"                        , {{ 11040, (void *)cuDeviceGetGraphMemAttribute                        }}},
    { "cuDeviceSetGraphMemAttribute"                        , {{ 11040, (void *)cuDeviceSetGraphMemAttribute                        }}},
    { "cuOccupancyMaxActiveBlocksPerMultiprocessor"         , {{  6050, (void *)cuOccupancyMaxActiveBlocksPerMultiprocessor         }}},
    { "cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags", {{  7000, (void *)cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags}}},
    { "cuOccupancyMaxPotentialBlockSize"                    , {{  6050, (void *)cuOccupancyMaxPotentialBlockSize                    }}},
    { "cuOccupancyMaxPotentialBlockSizeWithFlags"           , {{  7000, (void *)cuOccupancyMaxPotentialBlockSizeWithFlags           }}},
    { "cuOccupancyAvailableDynamicSMemPerBlock"             , {{ 10020, (void *)cuOccupancyAvailableDynamicSMemPerBlock             }}},
    { "cuOccupancyMaxPotentialClusterSize"                  , {{ 11070, (void *)cuOccupancyMaxPotentialClusterSize                  }}},
    { "cuOccupancyMaxActiveClusters"                        , {{ 11070, (void *)cuOccupancyMaxActiveClusters                        }}},
    { "cuTexRefSetArray"                                    , {{  2000, (void *)cuTexRefSetArray                                    }}},
    { "cuTexRefSetMipmappedArray"                           , {{  5000, (void *)cuTexRefSetMipmappedArray                           }}},
    { "cuTexRefSetAddress"                                  , {{  3020, (void *)cuTexRefSetAddress                                  }}},
    { "cuTexRefSetAddress2D"                                , {{  4010, (void *)cuTexRefSetAddress2D                                }}},
    { "cuTexRefSetFormat"                                   , {{  2000, (void *)cuTexRefSetFormat                                   }}},
    { "cuTexRefSetAddressMode"                              , {{  2000, (void *)cuTexRefSetAddressMode                              }}},
    { "cuTexRefSetFilterMode"                               , {{  2000, (void *)cuTexRefSetFilterMode                               }}},
    { "cuTexRefSetMipmapFilterMode"                         , {{  5000, (void *)cuTexRefSetMipmapFilterMode                         }}},
    { "cuTexRefSetMipmapLevelBias"                          , {{  5000, (void *)cuTexRefSetMipmapLevelBias                          }}},
    { "cuTexRefSetMipmapLevelClamp"                         , {{  5000, (void *)cuTexRefSetMipmapLevelClamp                         }}},
    { "cuTexRefSetMaxAnisotropy"                            , {{  5000, (void *)cuTexRefSetMaxAnisotropy                            }}},
    { "cuTexRefSetBorderColor"                              , {{  8000, (void *)cuTexRefSetBorderColor                              }}},
    { "cuTexRefSetFlags"                                    , {{  2000, (void *)cuTexRefSetFlags                                    }}},
    { "cuTexRefGetAddress"                                  , {{  3020, (void *)cuTexRefGetAddress                                  }}},
    { "cuTexRefGetArray"                                    , {{  2000, (void *)cuTexRefGetArray                                    }}},
    { "cuTexRefGetMipmappedArray"                           , {{  5000, (void *)cuTexRefGetMipmappedArray                           }}},
    { "cuTexRefGetAddressMode"                              , {{  2000, (void *)cuTexRefGetAddressMode                              }}},
    { "cuTexRefGetFilterMode"                               , {{  2000, (void *)cuTexRefGetFilterMode                               }}},
    { "cuTexRefGetFormat"                                   , {{  2000, (void *)cuTexRefGetFormat                                   }}},
    { "cuTexRefGetMipmapFilterMode"                         , {{  5000, (void *)cuTexRefGetMipmapFilterMode                         }}},
    { "cuTexRefGetMipmapLevelBias"                          , {{  5000, (void *)cuTexRefGetMipmapLevelBias                          }}},
    { "cuTexRefGetMipmapLevelClamp"                         , {{  5000, (void *)cuTexRefGetMipmapLevelClamp                         }}},
    { "cuTexRefGetMaxAnisotropy"                            , {{  5000, (void *)cuTexRefGetMaxAnisotropy                            }}},
    { "cuTexRefGetBorderColor"                              , {{  8000, (void *)cuTexRefGetBorderColor                              }}},
    { "cuTexRefGetFlags"                                    , {{  2000, (void *)cuTexRefGetFlags                                    }}},
    { "cuTexRefCreate"                                      , {{  2000, (void *)cuTexRefCreate                                      }}},
    { "cuTexRefDestroy"                                     , {{  2000, (void *)cuTexRefDestroy                                     }}},
    { "cuSurfRefSetArray"                                   , {{  3000, (void *)cuSurfRefSetArray                                   }}},
    { "cuSurfRefGetArray"                                   , {{  3000, (void *)cuSurfRefGetArray                                   }}},
    { "cuTexObjectCreate"                                   , {{  5000, (void *)cuTexObjectCreate                                   }}},
    { "cuTexObjectDestroy"                                  , {{  5000, (void *)cuTexObjectDestroy                                  }}},
    { "cuTexObjectGetResourceDesc"                          , {{  5000, (void *)cuTexObjectGetResourceDesc                          }}},
    { "cuTexObjectGetTextureDesc"                           , {{  5000, (void *)cuTexObjectGetTextureDesc                           }}},
    { "cuTexObjectGetResourceViewDesc"                      , {{  5000, (void *)cuTexObjectGetResourceViewDesc                      }}},
    { "cuSurfObjectCreate"                                  , {{  5000, (void *)cuSurfObjectCreate                                  }}},
    { "cuSurfObjectDestroy"                                 , {{  5000, (void *)cuSurfObjectDestroy                                 }}},
    { "cuSurfObjectGetResourceDesc"                         , {{  5000, (void *)cuSurfObjectGetResourceDesc                         }}},
    { "cuTensorMapEncodeTiled"                              , {{ 12000, (void *)cuTensorMapEncodeTiled                              }}},
    { "cuTensorMapEncodeIm2col"                             , {{ 12000, (void *)cuTensorMapEncodeIm2col                             }}},
    { "cuTensorMapReplaceAddress"                           , {{ 12000, (void *)cuTensorMapReplaceAddress                           }}},
    { "cuDeviceCanAccessPeer"                               , {{  4000, (void *)cuDeviceCanAccessPeer                               }}},
    { "cuCtxEnablePeerAccess"                               , {{  4000, (void *)cuCtxEnablePeerAccess                               }}},
    { "cuCtxDisablePeerAccess"                              , {{  4000, (void *)cuCtxDisablePeerAccess                              }}},
    { "cuDeviceGetP2PAttribute"                             , {{  8000, (void *)cuDeviceGetP2PAttribute                             }}},
    { "cuGraphicsUnregisterResource"                        , {{  3000, (void *)cuGraphicsUnregisterResource                        }}},
    { "cuGraphicsSubResourceGetMappedArray"                 , {{  3000, (void *)cuGraphicsSubResourceGetMappedArray                 }}},
    { "cuGraphicsResourceGetMappedMipmappedArray"           , {{  5000, (void *)cuGraphicsResourceGetMappedMipmappedArray           }}},
    { "cuGraphicsResourceGetMappedPointer"                  , {{  3020, (void *)cuGraphicsResourceGetMappedPointer                  }}},
    { "cuGraphicsResourceSetMapFlags"                       , {{  6050, (void *)cuGraphicsResourceSetMapFlags                       }}},
    { "cuGetExportTable"                                    , {{  3000, (void *)cuGetExportTable                                    }}},
    { "cuFuncGetModule"                                     , {{ 11000, (void *)cuFuncGetModule                                     }}},
    { "cuGetProcAddress"                                    , {{ 11030, (void *)cuGetProcAddress                                    }, { 12000, (void *)cuGetProcAddress_v2              }}},
    { "cuMemcpyHtoD"                                        , {{  3020, (void *)cuMemcpyHtoD                                        }}},
    { "cuMemcpyDtoH"                                        , {{  3020, (void *)cuMemcpyDtoH                                        }}},
    { "cuMemcpyDtoD"                                        , {{  3020, (void *)cuMemcpyDtoD                                        }}},
    { "cuMemcpyDtoA"                                        , {{  3020, (void *)cuMemcpyDtoA                                        }}},
    { "cuMemcpyAtoD"                                        , {{  3020, (void *)cuMemcpyAtoD                                        }}},
    { "cuMemcpyHtoA"                                        , {{  3020, (void *)cuMemcpyHtoA                                        }}},
    { "cuMemcpyAtoH"                                        , {{  3020, (void *)cuMemcpyAtoH                                        }}},
    { "cuMemcpyAtoA"                                        , {{  3020, (void *)cuMemcpyAtoA                                        }}},
    { "cuMemcpyHtoAAsync"                                   , {{  3020, (void *)cuMemcpyHtoAAsync                                   }}},
    { "cuMemcpyAtoHAsync"                                   , {{  3020, (void *)cuMemcpyAtoHAsync                                   }}},
    { "cuMemcpy2D"                                          , {{  3020, (void *)cuMemcpy2D                                          }}},
    { "cuMemcpy2DUnaligned"                                 , {{  3020, (void *)cuMemcpy2DUnaligned                                 }}},
    { "cuMemcpy3D"                                          , {{  3020, (void *)cuMemcpy3D                                          }}},
    { "cuMemcpyHtoDAsync"                                   , {{  3020, (void *)cuMemcpyHtoDAsync                                   }}},
    { "cuMemcpyDtoHAsync"                                   , {{  3020, (void *)cuMemcpyDtoHAsync                                   }}},
    { "cuMemcpyDtoDAsync"                                   , {{  3020, (void *)cuMemcpyDtoDAsync                                   }}},
    { "cuMemcpy2DAsync"                                     , {{  3020, (void *)cuMemcpy2DAsync                                     }}},
    { "cuMemcpy3DAsync"                                     , {{  3020, (void *)cuMemcpy3DAsync                                     }}},
    { "cuMemsetD8"                                          , {{  3020, (void *)cuMemsetD8                                          }}},
    { "cuMemsetD16"                                         , {{  3020, (void *)cuMemsetD16                                         }}},
    { "cuMemsetD32"                                         , {{  3020, (void *)cuMemsetD32                                         }}},
    { "cuMemsetD2D8"                                        , {{  3020, (void *)cuMemsetD2D8                                        }}},
    { "cuMemsetD2D16"                                       , {{  3020, (void *)cuMemsetD2D16                                       }}},
    { "cuMemsetD2D32"                                       , {{  3020, (void *)cuMemsetD2D32                                       }}},
    { "cuMemcpy"                                            , {{  4000, (void *)cuMemcpy                                            }}},
    { "cuMemcpyAsync"                                       , {{  4000, (void *)cuMemcpyAsync                                       }}},
    { "cuMemcpyPeer"                                        , {{  4000, (void *)cuMemcpyPeer                                        }}},
    { "cuMemcpyPeerAsync"                                   , {{  4000, (void *)cuMemcpyPeerAsync                                   }}},
    { "cuMemcpy3DPeer"                                      , {{  4000, (void *)cuMemcpy3DPeer                                      }}},
    { "cuMemcpy3DPeerAsync"                                 , {{  4000, (void *)cuMemcpy3DPeerAsync                                 }}},
    { "cuMemsetD8Async"                                     , {{  3020, (void *)cuMemsetD8Async                                     }}},
    { "cuMemsetD16Async"                                    , {{  3020, (void *)cuMemsetD16Async                                    }}},
    { "cuMemsetD32Async"                                    , {{  3020, (void *)cuMemsetD32Async                                    }}},
    { "cuMemsetD2D8Async"                                   , {{  3020, (void *)cuMemsetD2D8Async                                   }}},
    { "cuMemsetD2D16Async"                                  , {{  3020, (void *)cuMemsetD2D16Async                                  }}},
    { "cuMemsetD2D32Async"                                  , {{  3020, (void *)cuMemsetD2D32Async                                  }}},
    { "cuStreamGetPriority"                                 , {{  5050, (void *)cuStreamGetPriority                                 }}},
    { "cuStreamGetFlags"                                    , {{  5050, (void *)cuStreamGetFlags                                    }}},
    { "cuStreamGetCtx"                                      , {{  9020, (void *)cuStreamGetCtx                                      }}},
    { "cuStreamWaitEvent"                                   , {{  3020, (void *)cuStreamWaitEvent                                   }}},
    { "cuStreamAddCallback"                                 , {{  5000, (void *)cuStreamAddCallback                                 }}},
    { "cuStreamAttachMemAsync"                              , {{  6000, (void *)cuStreamAttachMemAsync                              }}},
    { "cuStreamQuery"                                       , {{  2000, (void *)cuStreamQuery                                       }}},
    { "cuStreamSynchronize"                                 , {{  2000, (void *)cuStreamSynchronize                                 }}},
    { "cuEventRecord"                                       , {{  2000, (void *)cuEventRecord                                       }}},
    { "cuEventRecordWithFlags"                              , {{ 11010, (void *)cuEventRecordWithFlags                              }}},
    { "cuLaunchKernel"                                      , {{  4000, (void *)cuLaunchKernel                                      }}},
    { "cuLaunchKernelEx"                                    , {{ 11060, (void *)cuLaunchKernelEx                                    }}},
    { "cuLaunchHostFunc"                                    , {{ 10000, (void *)cuLaunchHostFunc                                    }}},
    { "cuGraphicsMapResources"                              , {{  3000, (void *)cuGraphicsMapResources                              }}},
    { "cuGraphicsUnmapResources"                            , {{  3000, (void *)cuGraphicsUnmapResources                            }}},
    { "cuStreamWriteValue32"                                , {{ 11070, (void *)cuStreamWriteValue32                                }, {  8000, (void *)cuStreamWriteValue32_v2          }}},
    { "cuStreamWaitValue32"                                 , {{ 11070, (void *)cuStreamWaitValue32                                 }, {  8000, (void *)cuStreamWaitValue32_v2           }}},
    { "cuStreamWriteValue64"                                , {{ 11070, (void *)cuStreamWriteValue64                                }, {  9000, (void *)cuStreamWriteValue64_v2          }}},
    { "cuStreamWaitValue64"                                 , {{ 11070, (void *)cuStreamWaitValue64                                 }, {  9000, (void *)cuStreamWaitValue64_v2           }}},
    { "cuStreamBatchMemOp"                                  , {{ 11070, (void *)cuStreamBatchMemOp                                  }, {  8000, (void *)cuStreamBatchMemOp_v2            }}},
    { "cuMemPrefetchAsync"                                  , {{  8000, (void *)cuMemPrefetchAsync                                  }}},
    { "cuLaunchCooperativeKernel"                           , {{  9000, (void *)cuLaunchCooperativeKernel                           }}},
    { "cuSignalExternalSemaphoresAsync"                     , {{ 10000, (void *)cuSignalExternalSemaphoresAsync                     }}},
    { "cuWaitExternalSemaphoresAsync"                       , {{ 10000, (void *)cuWaitExternalSemaphoresAsync                       }}},
    { "cuStreamBeginCapture"                                , {{ 10010, (void *)cuStreamBeginCapture                                }}},
    { "cuStreamEndCapture"                                  , {{ 10000, (void *)cuStreamEndCapture                                  }}},
    { "cuStreamIsCapturing"                                 , {{ 10000, (void *)cuStreamIsCapturing                                 }}},
    { "cuStreamGetCaptureInfo"                              , {{ 10010, (void *)cuStreamGetCaptureInfo                              }, { 11030, (void *)cuStreamGetCaptureInfo_v2        }}},
    { "cuStreamUpdateCaptureDependencies"                   , {{ 11030, (void *)cuStreamUpdateCaptureDependencies                   }}},
    { "cuGraphInstantiateWithParams"                        , {{ 12000, (void *)cuGraphInstantiateWithParams                        }}},
    { "cuGraphUpload"                                       , {{ 11010, (void *)cuGraphUpload                                       }}},
    { "cuGraphLaunch"                                       , {{ 10000, (void *)cuGraphLaunch                                       }}},
    { "cuStreamCopyAttributes"                              , {{ 11000, (void *)cuStreamCopyAttributes                              }}},
    { "cuStreamGetAttribute"                                , {{ 11000, (void *)cuStreamGetAttribute                                }}},
    { "cuStreamSetAttribute"                                , {{ 11000, (void *)cuStreamSetAttribute                                }}},
    { "cuMemMapArrayAsync"                                  , {{ 11010, (void *)cuMemMapArrayAsync                                  }}},
    { "cuMemFreeAsync"                                      , {{ 11020, (void *)cuMemFreeAsync                                      }}},
    { "cuMemAllocAsync"                                     , {{ 11020, (void *)cuMemAllocAsync                                     }}},
    { "cuMemAllocFromPoolAsync"                             , {{ 11020, (void *)cuMemAllocFromPoolAsync                             }}},
    { "cuFlushGPUDirectRDMAWrites"                          , {{ 11030, (void *)cuFlushGPUDirectRDMAWrites                          }}},
    { "cuUserObjectCreate"                                  , {{ 11030, (void *)cuUserObjectCreate                                  }}},
    { "cuUserObjectRetain"                                  , {{ 11030, (void *)cuUserObjectRetain                                  }}},
    { "cuUserObjectRelease"                                 , {{ 11030, (void *)cuUserObjectRelease                                 }}},
    { "cuGraphRetainUserObject"                             , {{ 11030, (void *)cuGraphRetainUserObject                             }}},
    { "cuGraphReleaseUserObject"                            , {{ 11030, (void *)cuGraphReleaseUserObject                            }}},
    { "cuModuleGetLoadingMode"                              , {{ 11070, (void *)cuModuleGetLoadingMode                              }}},
    { "cuMemGetHandleForAddressRange"                       , {{ 11070, (void *)cuMemGetHandleForAddressRange                       }}},
    { "cuLibraryLoadData"                                   , {{ 12000, (void *)cuLibraryLoadData                                   }}},
    { "cuLibraryLoadFromFile"                               , {{ 12000, (void *)cuLibraryLoadFromFile                               }}},
    { "cuLibraryUnload"                                     , {{ 12000, (void *)cuLibraryUnload                                     }}},
    { "cuLibraryGetKernel"                                  , {{ 12000, (void *)cuLibraryGetKernel                                  }}},
    { "cuLibraryGetModule"                                  , {{ 12000, (void *)cuLibraryGetModule                                  }}},
    { "cuKernelGetFunction"                                 , {{ 12000, (void *)cuKernelGetFunction                                 }}},
    { "cuLibraryGetGlobal"                                  , {{ 12000, (void *)cuLibraryGetGlobal                                  }}},
    { "cuLibraryGetManaged"                                 , {{ 12000, (void *)cuLibraryGetManaged                                 }}},
    { "cuKernelGetAttribute"                                , {{ 12000, (void *)cuKernelGetAttribute                                }}},
    { "cuKernelSetAttribute"                                , {{ 12000, (void *)cuKernelSetAttribute                                }}},
    { "cuKernelSetCacheConfig"                              , {{ 12000, (void *)cuKernelSetCacheConfig                              }}},
    { "cuLibraryGetUnifiedFunction"                         , {{ 12000, (void *)cuLibraryGetUnifiedFunction                         }}},
};


// TODO: automatically generate cuGetProcAddress related code (replace the existing code in intercept.cpp)
static inline void GetInterceptAddr(const char *symbol, void **pfn, int cuda_version)
{
    auto name_it = intercept_funcs.find(symbol);
    if (name_it == intercept_funcs.end()) return;
    for (auto version_it = name_it->second.rbegin(); version_it != name_it->second.rend(); ++version_it) {
        if (cuda_version >= version_it->first) {
            XDEBG("override func addr: symbol: %s, old: %p, new: %p", symbol, *pfn, version_it->second);
            *pfn = version_it->second;
            return;
        }
    }
}

EXPORT_C_FUNC CUresult GetProcAddress_v2(const char *symbol, void **pfn, int cudaVersion, cuuint64_t flags, CUdriverProcAddressQueryResult *symbolStatus)
{
    XDEBG("GetProcAddress_v2(symbol: %s, cudaVersion: %d, flag: 0x%lx)", symbol, cudaVersion, flags);
    CUresult res = Driver::GetProcAddress_v2(symbol, pfn, cudaVersion, flags, symbolStatus);
    if (res != CUDA_SUCCESS) return res;
    GetInterceptAddr(symbol, pfn, cudaVersion);
    return res;
}